// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Lambda
#include <hxinc/Lambda.h>
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_Type
#include <hxinc/Type.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <hxinc/haxe/io/Input.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <hxinc/kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecodeState
#include <hxinc/kha/audio2/ogg/vorbis/VorbisDecodeState.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisDecoder
#include <hxinc/kha/audio2/ogg/vorbis/VorbisDecoder.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_VorbisTools
#include <hxinc/kha/audio2/ogg/vorbis/VorbisTools.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis__VorbisDecodeState_FindPageResult
#include <hxinc/kha/audio2/ogg/vorbis/_VorbisDecodeState/FindPageResult.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Codebook
#include <hxinc/kha/audio2/ogg/vorbis/data/Codebook.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor
#include <hxinc/kha/audio2/ogg/vorbis/data/Floor.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Floor1
#include <hxinc/kha/audio2/ogg/vorbis/data/Floor1.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Header
#include <hxinc/kha/audio2/ogg/vorbis/data/Header.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mapping
#include <hxinc/kha/audio2/ogg/vorbis/data/Mapping.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_MappingChannel
#include <hxinc/kha/audio2/ogg/vorbis/data/MappingChannel.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Mode
#include <hxinc/kha/audio2/ogg/vorbis/data/Mode.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ProbedPage
#include <hxinc/kha/audio2/ogg/vorbis/data/ProbedPage.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderError
#include <hxinc/kha/audio2/ogg/vorbis/data/ReaderError.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_ReaderErrorType
#include <hxinc/kha/audio2/ogg/vorbis/data/ReaderErrorType.h>
#endif
#ifndef INCLUDED_kha_audio2_ogg_vorbis_data_Residue
#include <hxinc/kha/audio2/ogg/vorbis/data/Residue.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0c42774540b7c399_44_new,"kha.audio2.ogg.vorbis.VorbisDecoder","new",0xc43447af,"kha.audio2.ogg.vorbis.VorbisDecoder.new","kha/audio2/ogg/vorbis/VorbisDecoder.hx",44,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_82_read,"kha.audio2.ogg.vorbis.VorbisDecoder","read",0xec2f3927,"kha.audio2.ogg.vorbis.VorbisDecoder.read","kha/audio2/ogg/vorbis/VorbisDecoder.hx",82,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_152_skipSamples,"kha.audio2.ogg.vorbis.VorbisDecoder","skipSamples",0x136a1299,"kha.audio2.ogg.vorbis.VorbisDecoder.skipSamples","kha/audio2/ogg/vorbis/VorbisDecoder.hx",152,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_172_setupSampleNumber,"kha.audio2.ogg.vorbis.VorbisDecoder","setupSampleNumber",0xd3bc1c3f,"kha.audio2.ogg.vorbis.VorbisDecoder.setupSampleNumber","kha/audio2/ogg/vorbis/VorbisDecoder.hx",172,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_178_seek,"kha.audio2.ogg.vorbis.VorbisDecoder","seek",0xecd87349,"kha.audio2.ogg.vorbis.VorbisDecoder.seek","kha/audio2/ogg/vorbis/VorbisDecoder.hx",178,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_280_seekFrameFromPage,"kha.audio2.ogg.vorbis.VorbisDecoder","seekFrameFromPage",0x14f3151d,"kha.audio2.ogg.vorbis.VorbisDecoder.seekFrameFromPage","kha/audio2/ogg/vorbis/VorbisDecoder.hx",280,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_343_clone,"kha.audio2.ogg.vorbis.VorbisDecoder","clone",0x1ecb3c6c,"kha.audio2.ogg.vorbis.VorbisDecoder.clone","kha/audio2/ogg/vorbis/VorbisDecoder.hx",343,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_376_ensurePosition,"kha.audio2.ogg.vorbis.VorbisDecoder","ensurePosition",0x02f8fd98,"kha.audio2.ogg.vorbis.VorbisDecoder.ensurePosition","kha/audio2/ogg/vorbis/VorbisDecoder.hx",376,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_379_getFrameFloat,"kha.audio2.ogg.vorbis.VorbisDecoder","getFrameFloat",0xc68da674,"kha.audio2.ogg.vorbis.VorbisDecoder.getFrameFloat","kha/audio2/ogg/vorbis/VorbisDecoder.hx",379,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_395_pumpFirstFrame,"kha.audio2.ogg.vorbis.VorbisDecoder","pumpFirstFrame",0xf5d8f1b6,"kha.audio2.ogg.vorbis.VorbisDecoder.pumpFirstFrame","kha/audio2/ogg/vorbis/VorbisDecoder.hx",395,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_398_finishFrame,"kha.audio2.ogg.vorbis.VorbisDecoder","finishFrame",0x21b77929,"kha.audio2.ogg.vorbis.VorbisDecoder.finishFrame","kha/audio2/ogg/vorbis/VorbisDecoder.hx",398,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_459_getWindow,"kha.audio2.ogg.vorbis.VorbisDecoder","getWindow",0x0a1679b5,"kha.audio2.ogg.vorbis.VorbisDecoder.getWindow","kha/audio2/ogg/vorbis/VorbisDecoder.hx",459,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_472_initBlocksize,"kha.audio2.ogg.vorbis.VorbisDecoder","initBlocksize",0x6667536d,"kha.audio2.ogg.vorbis.VorbisDecoder.initBlocksize","kha/audio2/ogg/vorbis/VorbisDecoder.hx",472,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_485_inverseMdct,"kha.audio2.ogg.vorbis.VorbisDecoder","inverseMdct",0x15d967e7,"kha.audio2.ogg.vorbis.VorbisDecoder.inverseMdct","kha/audio2/ogg/vorbis/VorbisDecoder.hx",485,0xbe2976a1)
static const int _hx_array_data_1815443d_52[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_491_decodePacket,"kha.audio2.ogg.vorbis.VorbisDecoder","decodePacket",0xe6ace627,"kha.audio2.ogg.vorbis.VorbisDecoder.decodePacket","kha/audio2/ogg/vorbis/VorbisDecoder.hx",491,0xbe2976a1)
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_501_decodeInitial,"kha.audio2.ogg.vorbis.VorbisDecoder","decodeInitial",0x7a874d05,"kha.audio2.ogg.vorbis.VorbisDecoder.decodeInitial","kha/audio2/ogg/vorbis/VorbisDecoder.hx",501,0xbe2976a1)
static const int _hx_array_data_1815443d_57[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_558_decodePacketRest,"kha.audio2.ogg.vorbis.VorbisDecoder","decodePacketRest",0x81390cdb,"kha.audio2.ogg.vorbis.VorbisDecoder.decodePacketRest","kha/audio2/ogg/vorbis/VorbisDecoder.hx",558,0xbe2976a1)
static const int _hx_array_data_1815443d_74[] = {
	(int)256,(int)128,(int)86,(int)64,
};
static const int _hx_array_data_1815443d_75[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
static const int _hx_array_data_1815443d_76[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_LOCAL_STACK_FRAME(_hx_pos_0c42774540b7c399_72_start,"kha.audio2.ogg.vorbis.VorbisDecoder","start",0x5a739d71,"kha.audio2.ogg.vorbis.VorbisDecoder.start","kha/audio2/ogg/vorbis/VorbisDecoder.hx",72,0xbe2976a1)
namespace kha{
namespace audio2{
namespace ogg{
namespace vorbis{

void VorbisDecoder_obj::__construct( ::kha::audio2::ogg::vorbis::data::Header header, ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_44_new)
HXLINE(  45)		this->_hx_set_header(HX_CTX, header);
HXLINE(  46)		this->_hx_set_decodeState(HX_CTX, decodeState);
HXLINE(  47)		this->_hx_set_totalSample(HX_CTX, null());
HXLINE(  48)		this->currentSample = 0;
HXLINE(  51)		this->previousLength = 0;
HXLINE(  53)		::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(header->channel);
HXDLIN(  53)		this->_hx_set_channelBuffers(HX_CTX, this1);
HXLINE(  54)		::Array< ::Dynamic> this2 = ::Array_obj< ::Dynamic>::__new(header->channel);
HXDLIN(  54)		this->_hx_set_previousWindow(HX_CTX, this2);
HXLINE(  55)		::Array< ::Dynamic> this3 = ::Array_obj< ::Dynamic>::__new(header->channel);
HXDLIN(  55)		this->_hx_set_finalY(HX_CTX, this3);
HXLINE(  57)		{
HXLINE(  57)			int _g = 0;
HXDLIN(  57)			int _g1 = header->channel;
HXDLIN(  57)			while((_g < _g1)){
HXLINE(  57)				_g = (_g + 1);
HXDLIN(  57)				int i = (_g - 1);
HXLINE(  58)				{
HXLINE(  58)					::Array< ::Dynamic> this4 = this->channelBuffers;
HXDLIN(  58)					::Array< Float > this5 = ::Array_obj< Float >::__new(header->blocksize1);
HXDLIN(  58)					::Array< Float > vec = this5;
HXDLIN(  58)					this4->__unsafe_set(i,vec);
            				}
HXLINE(  59)				{
HXLINE(  59)					::Array< ::Dynamic> this6 = this->previousWindow;
HXDLIN(  59)					::Array< Float > this7 = ::Array_obj< Float >::__new(::Std_obj::_hx_int((( (Float)(header->blocksize1) ) / ( (Float)(2) ))));
HXDLIN(  59)					::Array< Float > vec1 = this7;
HXDLIN(  59)					this6->__unsafe_set(i,vec1);
            				}
HXLINE(  60)				{
HXLINE(  60)					::Array< ::Dynamic> this8 = this->finalY;
HXDLIN(  60)					::Array< int > val = ::Array_obj< int >::__new();
HXDLIN(  60)					this8->__unsafe_set(i,val);
            				}
            			}
            		}
HXLINE(  63)		::Array< ::Dynamic> this9 = ::Array_obj< ::Dynamic>::__new(2);
HXDLIN(  63)		this->_hx_set_a(HX_CTX, this9);
HXLINE(  64)		::Array< ::Dynamic> this10 = ::Array_obj< ::Dynamic>::__new(2);
HXDLIN(  64)		this->_hx_set_b(HX_CTX, this10);
HXLINE(  65)		::Array< ::Dynamic> this11 = ::Array_obj< ::Dynamic>::__new(2);
HXDLIN(  65)		this->_hx_set_c(HX_CTX, this11);
HXLINE(  66)		::Array< ::Dynamic> this12 = ::Array_obj< ::Dynamic>::__new(2);
HXDLIN(  66)		this->_hx_set_window(HX_CTX, this12);
HXLINE(  67)		::Array< ::Dynamic> this13 = ::Array_obj< ::Dynamic>::__new(2);
HXDLIN(  67)		this->_hx_set_bitReverseData(HX_CTX, this13);
HXLINE(  68)		this->initBlocksize(0,header->blocksize0);
HXLINE(  69)		this->initBlocksize(1,header->blocksize1);
            	}

Dynamic VorbisDecoder_obj::__CreateEmpty() { return new VorbisDecoder_obj; }

void *VorbisDecoder_obj::_hx_vtable = 0;

Dynamic VorbisDecoder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VorbisDecoder_obj > _hx_result = new VorbisDecoder_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool VorbisDecoder_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x30da6aaf;
}

int VorbisDecoder_obj::read( ::kha::arrays::Float32ArrayPrivate output,int samples,int channels,int sampleRate,bool useFloat){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_82_read)
HXLINE(  83)		int _hx_int = sampleRate;
HXDLIN(  83)		Float a;
HXDLIN(  83)		if ((_hx_int < 0)) {
HXLINE(  83)			a = (((Float)4294967296.0) + _hx_int);
            		}
            		else {
HXLINE(  83)			a = (_hx_int + ((Float)0.0));
            		}
HXDLIN(  83)		int int1 = this->header->sampleRate;
HXDLIN(  83)		Float a1;
HXDLIN(  83)		if ((int1 < 0)) {
HXLINE(  83)			a1 = (((Float)4294967296.0) + int1);
            		}
            		else {
HXLINE(  83)			a1 = (int1 + ((Float)0.0));
            		}
HXDLIN(  83)		if ((::Std_obj::_hx_int(hx::Mod(a,a1)) != 0)) {
HXLINE(  84)			int int2 = this->header->sampleRate;
HXDLIN(  84)			Float _hx_tmp;
HXDLIN(  84)			if ((int2 < 0)) {
HXLINE(  84)				_hx_tmp = (((Float)4294967296.0) + int2);
            			}
            			else {
HXLINE(  84)				_hx_tmp = (int2 + ((Float)0.0));
            			}
HXDLIN(  84)			HX_STACK_DO_THROW((((HX_("Unsupported sampleRate : can't convert ",a1,80,14,2c) + ::Std_obj::string(_hx_tmp)) + HX_(" to ",25,3a,7f,15)) + sampleRate));
            		}
HXLINE(  86)		if ((hx::Mod(channels,this->header->channel) != 0)) {
HXLINE(  87)			HX_STACK_DO_THROW((((HX_("Unsupported channels : can't convert ",7b,f0,64,21) + this->header->channel) + HX_(" to ",25,3a,7f,15)) + channels));
            		}
HXLINE(  90)		int int3 = sampleRate;
HXDLIN(  90)		Float sampleRepeat;
HXDLIN(  90)		if ((int3 < 0)) {
HXLINE(  90)			sampleRepeat = (((Float)4294967296.0) + int3);
            		}
            		else {
HXLINE(  90)			sampleRepeat = (int3 + ((Float)0.0));
            		}
HXDLIN(  90)		int int4 = this->header->sampleRate;
HXDLIN(  90)		Float sampleRepeat1;
HXDLIN(  90)		if ((int4 < 0)) {
HXLINE(  90)			sampleRepeat1 = (((Float)4294967296.0) + int4);
            		}
            		else {
HXLINE(  90)			sampleRepeat1 = (int4 + ((Float)0.0));
            		}
HXDLIN(  90)		int sampleRepeat2 = ::Std_obj::_hx_int((sampleRepeat / sampleRepeat1));
HXLINE(  91)		int channelRepeat = ::Std_obj::_hx_int((( (Float)(channels) ) / ( (Float)(this->header->channel) )));
HXLINE(  93)		int n = 0;
HXLINE(  94)		int len = ::Math_obj::floor((( (Float)(samples) ) / ( (Float)(sampleRepeat2) )));
HXLINE(  95)		bool _hx_tmp1;
HXDLIN(  95)		if (hx::IsNotNull( this->totalSample )) {
HXLINE(  95)			_hx_tmp1 = (len > (( (int)(this->totalSample) ) - this->currentSample));
            		}
            		else {
HXLINE(  95)			_hx_tmp1 = false;
            		}
HXDLIN(  95)		if (_hx_tmp1) {
HXLINE(  96)			len = (( (int)(this->totalSample) ) - this->currentSample);
            		}
HXLINE(  99)		int index = 0;
HXLINE( 100)		while((n < len)){
HXLINE( 101)			int k = (this->channelBufferEnd - this->channelBufferStart);
HXLINE( 102)			if ((k >= (len - n))) {
HXLINE( 102)				k = (len - n);
            			}
HXLINE( 103)			{
HXLINE( 103)				int _g = this->channelBufferStart;
HXDLIN( 103)				int _g1 = (this->channelBufferStart + k);
HXDLIN( 103)				while((_g < _g1)){
HXLINE( 103)					_g = (_g + 1);
HXDLIN( 103)					int j = (_g - 1);
HXLINE( 104)					{
HXLINE( 104)						int _g2 = 0;
HXDLIN( 104)						int _g11 = sampleRepeat2;
HXDLIN( 104)						while((_g2 < _g11)){
HXLINE( 104)							_g2 = (_g2 + 1);
HXDLIN( 104)							int sr = (_g2 - 1);
HXLINE( 105)							{
HXLINE( 105)								int _g3 = 0;
HXDLIN( 105)								int _g12 = this->header->channel;
HXDLIN( 105)								while((_g3 < _g12)){
HXLINE( 105)									_g3 = (_g3 + 1);
HXDLIN( 105)									int i = (_g3 - 1);
HXLINE( 106)									{
HXLINE( 106)										int _g4 = 0;
HXDLIN( 106)										int _g13 = channelRepeat;
HXDLIN( 106)										while((_g4 < _g13)){
HXLINE( 106)											_g4 = (_g4 + 1);
HXDLIN( 106)											int cr = (_g4 - 1);
HXLINE( 107)											Float value = ( (Float)(_hx_array_unsafe_get(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) ),j)) );
HXLINE( 108)											if ((value > 1)) {
HXLINE( 109)												value = ( (Float)(1) );
            											}
            											else {
HXLINE( 110)												if ((value < -1)) {
HXLINE( 111)													value = ( (Float)(-1) );
            												}
            											}
HXLINE( 114)											if (useFloat) {
HXLINE( 116)												output->self.set(index,( (float)(value) ));
HXLINE( 117)												index = (index + 1);
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE( 125)			n = (n + k);
HXLINE( 126)			 ::kha::audio2::ogg::vorbis::VorbisDecoder _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 126)			_hx_tmp2->channelBufferStart = (_hx_tmp2->channelBufferStart + k);
HXLINE( 127)			bool _hx_tmp3;
HXDLIN( 127)			if ((n != len)) {
HXLINE( 127)				_hx_tmp3 = (this->getFrameFloat() == 0);
            			}
            			else {
HXLINE( 127)				_hx_tmp3 = true;
            			}
HXDLIN( 127)			if (_hx_tmp3) {
HXLINE( 128)				goto _hx_goto_2;
            			}
            		}
            		_hx_goto_2:;
HXLINE( 132)		{
HXLINE( 132)			int _g5 = n;
HXDLIN( 132)			int _g14 = len;
HXDLIN( 132)			while((_g5 < _g14)){
HXLINE( 132)				_g5 = (_g5 + 1);
HXDLIN( 132)				int j1 = (_g5 - 1);
HXLINE( 133)				{
HXLINE( 133)					int _g6 = 0;
HXDLIN( 133)					int _g15 = sampleRepeat2;
HXDLIN( 133)					while((_g6 < _g15)){
HXLINE( 133)						_g6 = (_g6 + 1);
HXDLIN( 133)						int sr1 = (_g6 - 1);
HXLINE( 134)						{
HXLINE( 134)							int _g7 = 0;
HXDLIN( 134)							int _g16 = this->header->channel;
HXDLIN( 134)							while((_g7 < _g16)){
HXLINE( 134)								_g7 = (_g7 + 1);
HXDLIN( 134)								int i1 = (_g7 - 1);
HXLINE( 135)								{
HXLINE( 135)									int _g8 = 0;
HXDLIN( 135)									int _g17 = channelRepeat;
HXDLIN( 135)									while((_g8 < _g17)){
HXLINE( 135)										_g8 = (_g8 + 1);
HXDLIN( 135)										int cr1 = (_g8 - 1);
HXLINE( 136)										if (useFloat) {
HXLINE( 138)											output->self.set(index,( (float)(0) ));
HXLINE( 139)											index = (index + 1);
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 148)		 ::kha::audio2::ogg::vorbis::VorbisDecoder _hx_tmp4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 148)		_hx_tmp4->currentSample = (_hx_tmp4->currentSample + len);
HXLINE( 149)		return (len * sampleRepeat2);
            	}


HX_DEFINE_DYNAMIC_FUNC5(VorbisDecoder_obj,read,return )

int VorbisDecoder_obj::skipSamples(int len){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_152_skipSamples)
HXLINE( 153)		int n = 0;
HXLINE( 154)		bool _hx_tmp;
HXDLIN( 154)		if (hx::IsNotNull( this->totalSample )) {
HXLINE( 154)			_hx_tmp = (len > (( (int)(this->totalSample) ) - this->currentSample));
            		}
            		else {
HXLINE( 154)			_hx_tmp = false;
            		}
HXDLIN( 154)		if (_hx_tmp) {
HXLINE( 155)			len = (( (int)(this->totalSample) ) - this->currentSample);
            		}
HXLINE( 157)		while((n < len)){
HXLINE( 158)			int k = (this->channelBufferEnd - this->channelBufferStart);
HXLINE( 159)			if ((k >= (len - n))) {
HXLINE( 159)				k = (len - n);
            			}
HXLINE( 160)			n = (n + k);
HXLINE( 161)			 ::kha::audio2::ogg::vorbis::VorbisDecoder _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 161)			_hx_tmp1->channelBufferStart = (_hx_tmp1->channelBufferStart + k);
HXLINE( 162)			bool _hx_tmp2;
HXDLIN( 162)			if ((n != len)) {
HXLINE( 162)				_hx_tmp2 = (this->getFrameFloat() == 0);
            			}
            			else {
HXLINE( 162)				_hx_tmp2 = true;
            			}
HXDLIN( 162)			if (_hx_tmp2) {
HXLINE( 163)				goto _hx_goto_12;
            			}
            		}
            		_hx_goto_12:;
HXLINE( 167)		 ::kha::audio2::ogg::vorbis::VorbisDecoder _hx_tmp3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 167)		_hx_tmp3->currentSample = (_hx_tmp3->currentSample + len);
HXLINE( 168)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,skipSamples,return )

void VorbisDecoder_obj::setupSampleNumber( ::Dynamic seekFunc,int inputLength){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_172_setupSampleNumber)
HXDLIN( 172)		if (hx::IsNull( this->totalSample )) {
HXLINE( 173)			this->_hx_set_totalSample(HX_CTX, this->decodeState->getSampleNumber(seekFunc,inputLength));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,setupSampleNumber,(void))

void VorbisDecoder_obj::seek( ::Dynamic seekFunc,int inputLength,int sampleNumber){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_178_seek)
HXLINE( 179)		if ((this->currentSample == sampleNumber)) {
HXLINE( 180)			return;
            		}
HXLINE( 184)		if (hx::IsNull( this->totalSample )) {
HXLINE( 185)			this->setupSampleNumber(seekFunc,inputLength);
HXLINE( 186)			if (hx::IsEq( this->totalSample,0 )) {
HXLINE( 187)				HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::CANT_FIND_LAST_PAGE_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),187,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            			}
            		}
HXLINE( 191)		if ((sampleNumber < 0)) {
HXLINE( 192)			sampleNumber = 0;
            		}
HXLINE( 195)		 ::kha::audio2::ogg::vorbis::data::ProbedPage p0 = this->decodeState->pFirst;
HXLINE( 196)		 ::kha::audio2::ogg::vorbis::data::ProbedPage p1 = this->decodeState->pLast;
HXLINE( 198)		if (hx::IsGreaterEq( sampleNumber,p1->lastDecodedSample )) {
HXLINE( 199)			sampleNumber = (( (int)(p1->lastDecodedSample) ) - 1);
            		}
HXLINE( 202)		if (hx::IsLess( sampleNumber,p0->lastDecodedSample )) {
HXLINE( 203)			this->seekFrameFromPage(seekFunc,p0->pageStart,0,sampleNumber);
            		}
            		else {
HXLINE( 205)			int attempts = 0;
HXLINE( 207)			while((p0->pageEnd < p1->pageStart)){
HXLINE( 212)				int startOffset = p0->pageEnd;
HXLINE( 213)				int endOffset = p1->afterPreviousPageStart;
HXLINE( 214)				 ::Dynamic startSample = p0->lastDecodedSample;
HXLINE( 215)				 ::Dynamic endSample = p1->lastDecodedSample;
HXLINE( 218)				bool _hx_tmp;
HXDLIN( 218)				if (hx::IsNotNull( startSample )) {
HXLINE( 218)					_hx_tmp = hx::IsNull( endSample );
            				}
            				else {
HXLINE( 218)					_hx_tmp = true;
            				}
HXDLIN( 218)				if (_hx_tmp) {
HXLINE( 219)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),219,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 225)				int a = (startOffset + 4000);
HXDLIN( 225)				bool aNeg = (endOffset < 0);
HXDLIN( 225)				bool bNeg = (a < 0);
HXDLIN( 225)				bool _hx_tmp1;
HXDLIN( 225)				if ((aNeg != bNeg)) {
HXLINE( 225)					_hx_tmp1 = aNeg;
            				}
            				else {
HXLINE( 225)					_hx_tmp1 = (endOffset > a);
            				}
HXDLIN( 225)				if (_hx_tmp1) {
HXLINE( 226)					endOffset = (endOffset - 4000);
            				}
HXLINE( 230)				int _hx_int = (endOffset - startOffset);
HXDLIN( 230)				Float probe;
HXDLIN( 230)				if ((_hx_int < 0)) {
HXLINE( 230)					probe = (((Float)4294967296.0) + _hx_int);
            				}
            				else {
HXLINE( 230)					probe = (_hx_int + ((Float)0.0));
            				}
HXDLIN( 230)				int int1 = (( (int)(endSample) ) - ( (int)(startSample) ));
HXDLIN( 230)				Float probe1;
HXDLIN( 230)				if ((int1 < 0)) {
HXLINE( 230)					probe1 = (((Float)4294967296.0) + int1);
            				}
            				else {
HXLINE( 230)					probe1 = (int1 + ((Float)0.0));
            				}
HXDLIN( 230)				int probe2 = (startOffset + ::Math_obj::floor(((probe / probe1) * ( (Float)((sampleNumber - ( (int)(startSample) ))) ))));
HXLINE( 234)				if ((attempts >= 4)) {
HXLINE( 235)					int probe21 = (startOffset + hx::UShr((endOffset - startOffset),1));
HXLINE( 236)					if ((attempts >= 8)) {
HXLINE( 237)						probe2 = probe21;
            					}
            					else {
HXLINE( 238)						bool aNeg1 = (probe21 < 0);
HXDLIN( 238)						bool bNeg1 = (probe2 < 0);
HXDLIN( 238)						bool probe3;
HXDLIN( 238)						if ((aNeg1 != bNeg1)) {
HXLINE( 238)							probe3 = aNeg1;
            						}
            						else {
HXLINE( 238)							probe3 = (probe21 > probe2);
            						}
HXDLIN( 238)						if (probe3) {
HXLINE( 239)							probe2 = (probe2 + hx::UShr((probe21 - probe2),1));
            						}
            						else {
HXLINE( 241)							probe2 = (probe21 + hx::UShr((probe2 - probe21),1));
            						}
            					}
            				}
HXLINE( 244)				attempts = (attempts + 1);
HXLINE( 245)				seekFunc((this->decodeState->inputPosition = probe2));
HXLINE( 247)				{
HXLINE( 247)					 ::kha::audio2::ogg::vorbis::_VorbisDecodeState::FindPageResult _g = this->decodeState->findPage(seekFunc,inputLength);
HXDLIN( 247)					switch((int)(_g->_hx_getIndex())){
            						case (int)0: {
HXLINE( 250)							bool _g2 = _g->_hx_getBool(1);
HXDLIN( 250)							int _g1 = _g->_hx_getInt(0);
            						}
            						break;
            						case (int)1: {
HXLINE( 249)							HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),249,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            						}
            						break;
            					}
            				}
HXLINE( 253)				 ::kha::audio2::ogg::vorbis::data::ProbedPage q = this->decodeState->analyzePage(seekFunc,this->header);
HXLINE( 254)				if (hx::IsNull( q )) {
HXLINE( 255)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),255,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 257)				q->afterPreviousPageStart = probe2;
HXLINE( 260)				if ((q->pageStart == p1->pageStart)) {
HXLINE( 261)					p1 = q;
HXLINE( 262)					continue;
            				}
HXLINE( 265)				if (hx::IsLess( sampleNumber,q->lastDecodedSample )) {
HXLINE( 266)					p1 = q;
            				}
            				else {
HXLINE( 268)					p0 = q;
            				}
            			}
HXLINE( 272)			bool _hx_tmp2;
HXDLIN( 272)			if (hx::IsLessEq( p0->lastDecodedSample,sampleNumber )) {
HXLINE( 272)				_hx_tmp2 = hx::IsLess( sampleNumber,p1->lastDecodedSample );
            			}
            			else {
HXLINE( 272)				_hx_tmp2 = false;
            			}
HXDLIN( 272)			if (_hx_tmp2) {
HXLINE( 273)				this->seekFrameFromPage(seekFunc,p1->pageStart,( (int)(p0->lastDecodedSample) ),sampleNumber);
            			}
            			else {
HXLINE( 275)				HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),275,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("seek",78,85,50,4c))));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,seek,(void))

void VorbisDecoder_obj::seekFrameFromPage( ::Dynamic seekFunc,int pageStart,int firstSample,int targetSample){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_280_seekFrameFromPage)
HXLINE( 281)		int frame = 0;
HXLINE( 282)		int frameStart = firstSample;
HXLINE( 287)		seekFunc((this->decodeState->inputPosition = pageStart));
HXLINE( 288)		this->decodeState->nextSeg = -1;
HXLINE( 297)		int leftEnd = 0;
HXLINE( 298)		int leftStart = 0;
HXLINE( 300)		 ::kha::audio2::ogg::vorbis::VorbisDecodeState prevState = null();
HXLINE( 301)		 ::kha::audio2::ogg::vorbis::VorbisDecodeState lastState = null();
HXLINE( 303)		while(true){
HXLINE( 304)			prevState = lastState;
HXLINE( 305)			lastState = this->decodeState->clone(seekFunc);
HXLINE( 307)			 ::Dynamic initialResult = this->decodeInitial();
HXLINE( 308)			if (hx::IsNull( initialResult )) {
HXLINE( 309)				lastState = prevState;
HXLINE( 310)				goto _hx_goto_17;
            			}
HXLINE( 313)			leftStart = ( (int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) );
HXLINE( 314)			leftEnd = ( (int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("end",db,03,4d,00),hx::paccDynamic)) );
HXLINE( 316)			int start;
HXDLIN( 316)			if ((frame == 0)) {
HXLINE( 316)				start = leftEnd;
            			}
            			else {
HXLINE( 316)				start = leftStart;
            			}
HXLINE( 324)			if ((targetSample < (( (int)((frameStart +  ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic))) ) - start))) {
HXLINE( 325)				goto _hx_goto_17;
            			}
HXLINE( 328)			{
HXLINE( 328)				 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this = this->decodeState;
HXDLIN( 328)				while(true){
HXLINE( 328)					bool _hx_tmp;
HXDLIN( 328)					if ((_this->bytesInSeg == 0)) {
HXLINE( 328)						if (!(_this->lastSeg)) {
HXLINE( 328)							_hx_tmp = (_this->next() != 0);
            						}
            						else {
HXLINE( 328)							_hx_tmp = false;
            						}
            					}
            					else {
HXLINE( 328)						_hx_tmp = true;
            					}
HXDLIN( 328)					if (!(_hx_tmp)) {
HXLINE( 328)						goto _hx_goto_18;
            					}
HXDLIN( 328)					_this->bytesInSeg--;
HXDLIN( 328)					{
HXLINE( 328)						 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this1 = _this;
HXDLIN( 328)						_this1->inputPosition = (_this1->inputPosition + 1);
HXDLIN( 328)						_this->input->readByte();
            					}
            				}
            				_hx_goto_18:;
            			}
HXLINE( 329)			frameStart = (frameStart + (( (int)( ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) ) - start));
HXLINE( 330)			frame = (frame + 1);
            		}
            		_hx_goto_17:;
HXLINE( 333)		this->_hx_set_decodeState(HX_CTX, lastState);
HXLINE( 334)		seekFunc(this->decodeState->inputPosition);
HXLINE( 336)		this->previousLength = 0;
HXLINE( 337)		this->pumpFirstFrame();
HXLINE( 339)		this->currentSample = frameStart;
HXLINE( 340)		this->skipSamples((targetSample - frameStart));
            	}


HX_DEFINE_DYNAMIC_FUNC4(VorbisDecoder_obj,seekFrameFromPage,(void))

 ::kha::audio2::ogg::vorbis::VorbisDecoder VorbisDecoder_obj::clone( ::Dynamic seekFunc){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_343_clone)
HXLINE( 344)		 ::kha::audio2::ogg::vorbis::VorbisDecoder decoder = ( ( ::kha::audio2::ogg::vorbis::VorbisDecoder)(::Type_obj::createEmptyInstance(hx::ClassOf< ::kha::audio2::ogg::vorbis::VorbisDecoder >())) );
HXLINE( 346)		decoder->currentSample = this->currentSample;
HXLINE( 347)		decoder->_hx_set_totalSample(HX_CTX, this->totalSample);
HXLINE( 348)		decoder->previousLength = this->previousLength;
HXLINE( 349)		decoder->channelBufferStart = this->channelBufferStart;
HXLINE( 350)		decoder->channelBufferEnd = this->channelBufferEnd;
HXLINE( 353)		decoder->_hx_set_a(HX_CTX, this->a);
HXLINE( 354)		decoder->_hx_set_b(HX_CTX, this->b);
HXLINE( 355)		decoder->_hx_set_c(HX_CTX, this->c);
HXLINE( 356)		decoder->_hx_set_window(HX_CTX, this->window);
HXLINE( 357)		decoder->_hx_set_bitReverseData(HX_CTX, this->bitReverseData);
HXLINE( 358)		decoder->_hx_set_header(HX_CTX, this->header);
HXLINE( 361)		decoder->_hx_set_decodeState(HX_CTX, this->decodeState->clone(seekFunc));
HXLINE( 362)		::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXDLIN( 362)		decoder->_hx_set_channelBuffers(HX_CTX, this1);
HXLINE( 363)		::Array< ::Dynamic> this2 = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXDLIN( 363)		decoder->_hx_set_previousWindow(HX_CTX, this2);
HXLINE( 364)		::Array< ::Dynamic> this3 = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXDLIN( 364)		decoder->_hx_set_finalY(HX_CTX, this3);
HXLINE( 366)		{
HXLINE( 366)			int _g = 0;
HXDLIN( 366)			int _g1 = this->header->channel;
HXDLIN( 366)			while((_g < _g1)){
HXLINE( 366)				_g = (_g + 1);
HXDLIN( 366)				int i = (_g - 1);
HXLINE( 367)				{
HXLINE( 367)					::Array< ::Dynamic> this4 = decoder->channelBuffers;
HXDLIN( 367)					::Array< Float > val = ::kha::audio2::ogg::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) ));
HXDLIN( 367)					this4->__unsafe_set(i,val);
            				}
HXLINE( 368)				{
HXLINE( 368)					::Array< ::Dynamic> this5 = decoder->previousWindow;
HXDLIN( 368)					::Array< Float > val1 = ::kha::audio2::ogg::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) ));
HXDLIN( 368)					this5->__unsafe_set(i,val1);
            				}
HXLINE( 369)				{
HXLINE( 369)					::Array< ::Dynamic> this6 = decoder->finalY;
HXDLIN( 369)					::Array< int > val2 = ::Lambda_obj::array(_hx_array_unsafe_get(this->finalY,i));
HXDLIN( 369)					this6->__unsafe_set(i,val2);
            				}
            			}
            		}
HXLINE( 372)		return decoder;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,clone,return )

void VorbisDecoder_obj::ensurePosition( ::Dynamic seekFunc){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_376_ensurePosition)
HXDLIN( 376)		seekFunc(this->decodeState->inputPosition);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,ensurePosition,(void))

int VorbisDecoder_obj::getFrameFloat(){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_379_getFrameFloat)
HXLINE( 380)		 ::Dynamic result = this->decodePacket();
HXLINE( 381)		if (hx::IsNull( result )) {
HXLINE( 382)			this->channelBufferStart = (this->channelBufferEnd = 0);
HXLINE( 383)			return 0;
            		}
HXLINE( 386)		int len = this->finishFrame(result);
HXLINE( 388)		this->channelBufferStart = ( (int)(result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 389)		this->channelBufferEnd = ( (int)((result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic) + len)) );
HXLINE( 391)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,getFrameFloat,return )

void VorbisDecoder_obj::pumpFirstFrame(){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_395_pumpFirstFrame)
HXDLIN( 395)		this->finishFrame(this->decodePacket());
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,pumpFirstFrame,(void))

int VorbisDecoder_obj::finishFrame( ::Dynamic r){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_398_finishFrame)
HXLINE( 399)		int len = ( (int)(r->__Field(HX_("len",d5,4b,52,00),hx::paccDynamic)) );
HXLINE( 400)		int right = ( (int)(r->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic)) );
HXLINE( 401)		int left = ( (int)(r->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 412)		if ((this->previousLength != 0)) {
HXLINE( 413)			int n = this->previousLength;
HXLINE( 414)			::Array< Float > w = this->getWindow(n);
HXLINE( 415)			{
HXLINE( 415)				int _g = 0;
HXDLIN( 415)				int _g1 = this->header->channel;
HXDLIN( 415)				while((_g < _g1)){
HXLINE( 415)					_g = (_g + 1);
HXDLIN( 415)					int i = (_g - 1);
HXLINE( 416)					::Array< Float > cb = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) );
HXLINE( 417)					::Array< Float > pw = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) );
HXLINE( 418)					{
HXLINE( 418)						int _g2 = 0;
HXDLIN( 418)						int _g11 = n;
HXDLIN( 418)						while((_g2 < _g11)){
HXLINE( 418)							_g2 = (_g2 + 1);
HXDLIN( 418)							int j = (_g2 - 1);
HXLINE( 419)							{
HXLINE( 419)								Float val = ( (Float)(_hx_array_unsafe_get(cb,(left + j))) );
HXDLIN( 419)								Float val1 = (val * ( (Float)(_hx_array_unsafe_get(w,j)) ));
HXDLIN( 419)								Float val2 = ( (Float)(_hx_array_unsafe_get(pw,j)) );
HXDLIN( 419)								Float val3 = (val1 + (val2 * ( (Float)(_hx_array_unsafe_get(w,((n - 1) - j))) )));
HXDLIN( 419)								cb->__unsafe_set((left + j),val3);
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 424)		int prev = this->previousLength;
HXLINE( 427)		this->previousLength = (len - right);
HXLINE( 435)		{
HXLINE( 435)			int _g3 = 0;
HXDLIN( 435)			int _g12 = this->header->channel;
HXDLIN( 435)			while((_g3 < _g12)){
HXLINE( 435)				_g3 = (_g3 + 1);
HXDLIN( 435)				int i1 = (_g3 - 1);
HXLINE( 436)				::Array< Float > pw1 = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i1)) );
HXLINE( 437)				::Array< Float > cb1 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i1)) );
HXLINE( 438)				{
HXLINE( 438)					int _g4 = 0;
HXDLIN( 438)					int _g13 = (len - right);
HXDLIN( 438)					while((_g4 < _g13)){
HXLINE( 438)						_g4 = (_g4 + 1);
HXDLIN( 438)						int j1 = (_g4 - 1);
HXLINE( 439)						{
HXLINE( 439)							Float val4 = ( (Float)(_hx_array_unsafe_get(cb1,(right + j1))) );
HXDLIN( 439)							pw1->__unsafe_set(j1,val4);
            						}
            					}
            				}
            			}
            		}
HXLINE( 443)		if ((prev == 0)) {
HXLINE( 447)			return 0;
            		}
HXLINE( 451)		if ((len < right)) {
HXLINE( 452)			right = len;
            		}
HXLINE( 455)		return (right - left);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,finishFrame,return )

::Array< Float > VorbisDecoder_obj::getWindow(int len){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_459_getWindow)
HXLINE( 460)		len = (len << 1);
HXLINE( 461)		if ((len == this->header->blocksize0)) {
HXLINE( 462)			return ( (::Array< Float >)(_hx_array_unsafe_get(this->window,0)) );
            		}
            		else {
HXLINE( 463)			if ((len == this->header->blocksize1)) {
HXLINE( 464)				return ( (::Array< Float >)(_hx_array_unsafe_get(this->window,1)) );
            			}
            			else {
HXLINE( 467)				return null();
            			}
            		}
HXLINE( 461)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,getWindow,return )

void VorbisDecoder_obj::initBlocksize(int bs,int n){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_472_initBlocksize)
HXLINE( 473)		int n2 = (n >> 1);
HXDLIN( 473)		int n4 = (n >> 2);
HXDLIN( 473)		int n8 = (n >> 3);
HXLINE( 474)		{
HXLINE( 474)			::Array< ::Dynamic> this1 = this->a;
HXDLIN( 474)			::Array< Float > this2 = ::Array_obj< Float >::__new(n2);
HXDLIN( 474)			this1->__unsafe_set(bs,this2);
            		}
HXLINE( 475)		{
HXLINE( 475)			::Array< ::Dynamic> this3 = this->b;
HXDLIN( 475)			::Array< Float > this4 = ::Array_obj< Float >::__new(n2);
HXDLIN( 475)			this3->__unsafe_set(bs,this4);
            		}
HXLINE( 476)		{
HXLINE( 476)			::Array< ::Dynamic> this5 = this->c;
HXDLIN( 476)			::Array< Float > this6 = ::Array_obj< Float >::__new(n4);
HXDLIN( 476)			this5->__unsafe_set(bs,this6);
            		}
HXLINE( 477)		{
HXLINE( 477)			::Array< ::Dynamic> this7 = this->window;
HXDLIN( 477)			::Array< Float > this8 = ::Array_obj< Float >::__new(n2);
HXDLIN( 477)			this7->__unsafe_set(bs,this8);
            		}
HXLINE( 478)		{
HXLINE( 478)			::Array< ::Dynamic> this9 = this->bitReverseData;
HXDLIN( 478)			::Array< int > this10 = ::Array_obj< int >::__new(n8);
HXDLIN( 478)			this9->__unsafe_set(bs,this10);
            		}
HXLINE( 480)		::Array< Float > _hx_tmp = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bs)) );
HXDLIN( 480)		::Array< Float > _hx_tmp1 = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bs)) );
HXDLIN( 480)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeTwiddleFactors(n,_hx_tmp,_hx_tmp1,( (::Array< Float >)(_hx_array_unsafe_get(this->c,bs)) ));
HXLINE( 481)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeWindow(n,( (::Array< Float >)(_hx_array_unsafe_get(this->window,bs)) ));
HXLINE( 482)		::kha::audio2::ogg::vorbis::VorbisTools_obj::computeBitReverse(n,( (::Array< int >)(_hx_array_unsafe_get(this->bitReverseData,bs)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,initBlocksize,(void))

void VorbisDecoder_obj::inverseMdct(::Array< Float > buffer,int n,bool blocktype){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_485_inverseMdct)
HXLINE( 486)		int bt;
HXDLIN( 486)		if (blocktype) {
HXLINE( 486)			bt = 1;
            		}
            		else {
HXLINE( 486)			bt = 0;
            		}
HXLINE( 487)		{
HXLINE( 487)			::Array< Float > a = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bt)) );
HXDLIN( 487)			::Array< Float > b = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bt)) );
HXDLIN( 487)			::Array< Float > c = ( (::Array< Float >)(_hx_array_unsafe_get(this->c,bt)) );
HXDLIN( 487)			::Array< int > bitReverse = ( (::Array< int >)(_hx_array_unsafe_get(this->bitReverseData,bt)) );
HXDLIN( 487)			int n2 = (n >> 1);
HXDLIN( 487)			int n4 = (n >> 2);
HXDLIN( 487)			int n8 = (n >> 3);
HXDLIN( 487)			::Array< Float > this1 = ::Array_obj< Float >::__new(n2);
HXDLIN( 487)			::Array< Float > buf2 = this1;
HXDLIN( 487)			{
HXLINE( 487)				int dOffset = (n2 - 2);
HXDLIN( 487)				int aaOffset = 0;
HXDLIN( 487)				int eOffset = 0;
HXDLIN( 487)				int eStopOffset = n2;
HXDLIN( 487)				while((eOffset != eStopOffset)){
HXLINE( 487)					{
HXLINE( 487)						Float val = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 487)						Float val1 = (val * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						Float val2 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + 2))) );
HXDLIN( 487)						Float val3 = (val1 - (val2 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + 1))) )));
HXDLIN( 487)						buf2->__unsafe_set((dOffset + 1),val3);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val4 = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 487)						Float val5 = (val4 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + 1))) ));
HXDLIN( 487)						Float val6 = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + 2))) );
HXDLIN( 487)						Float val7 = (val5 + (val6 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) )));
HXDLIN( 487)						buf2->__unsafe_set(dOffset,val7);
            					}
HXDLIN( 487)					dOffset = (dOffset - 2);
HXDLIN( 487)					aaOffset = (aaOffset + 2);
HXDLIN( 487)					eOffset = (eOffset + 4);
            				}
HXDLIN( 487)				eOffset = (n2 - 3);
HXDLIN( 487)				while((dOffset >= 0)){
HXLINE( 487)					{
HXLINE( 487)						Float val8 = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + 2))) ));
HXDLIN( 487)						Float val9 = (val8 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 487)						Float val10 = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 487)						Float val11 = (val9 - (val10 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + 1))) )));
HXDLIN( 487)						buf2->__unsafe_set((dOffset + 1),val11);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val12 = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + 2))) ));
HXDLIN( 487)						Float val13 = (val12 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + 1))) ));
HXDLIN( 487)						Float val14 = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 487)						Float val15 = (val13 + (val14 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) )));
HXDLIN( 487)						buf2->__unsafe_set(dOffset,val15);
            					}
HXDLIN( 487)					dOffset = (dOffset - 2);
HXDLIN( 487)					aaOffset = (aaOffset + 2);
HXDLIN( 487)					eOffset = (eOffset - 4);
            				}
            			}
HXDLIN( 487)			::Array< Float > u = buffer;
HXDLIN( 487)			::Array< Float > v = buf2;
HXDLIN( 487)			{
HXLINE( 487)				int aaOffset1 = (n2 - 8);
HXDLIN( 487)				int eOffset0 = n4;
HXDLIN( 487)				int eOffset1 = 0;
HXDLIN( 487)				int dOffset0 = n4;
HXDLIN( 487)				int dOffset1 = 0;
HXDLIN( 487)				while((aaOffset1 >= 0)){
HXLINE( 487)					Float v41_21 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 1))) );
HXDLIN( 487)					Float v41_211 = (v41_21 - ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 1))) ));
HXDLIN( 487)					Float v40_20 = ( (Float)(_hx_array_unsafe_get(v,eOffset0)) );
HXDLIN( 487)					Float v40_201 = (v40_20 - ( (Float)(_hx_array_unsafe_get(v,eOffset1)) ));
HXDLIN( 487)					{
HXLINE( 487)						Float val16 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 1))) );
HXDLIN( 487)						Float val17 = (val16 + ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 1))) ));
HXDLIN( 487)						u->__unsafe_set((dOffset0 + 1),val17);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val18 = ( (Float)(_hx_array_unsafe_get(v,eOffset0)) );
HXDLIN( 487)						Float val19 = (val18 + ( (Float)(_hx_array_unsafe_get(v,eOffset1)) ));
HXDLIN( 487)						u->__unsafe_set(dOffset0,val19);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val20 = (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 4))) ));
HXDLIN( 487)						Float val21 = (val20 - (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 5))) )));
HXDLIN( 487)						u->__unsafe_set((dOffset1 + 1),val21);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val22 = (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 4))) ));
HXDLIN( 487)						Float val23 = (val22 + (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 5))) )));
HXDLIN( 487)						u->__unsafe_set(dOffset1,val23);
            					}
HXDLIN( 487)					Float v41_212 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 3))) );
HXDLIN( 487)					v41_211 = (v41_212 - ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 3))) ));
HXDLIN( 487)					Float v40_202 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 2))) );
HXDLIN( 487)					v40_201 = (v40_202 - ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 2))) ));
HXDLIN( 487)					{
HXLINE( 487)						Float val24 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 3))) );
HXDLIN( 487)						Float val25 = (val24 + ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 3))) ));
HXDLIN( 487)						u->__unsafe_set((dOffset0 + 3),val25);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val26 = ( (Float)(_hx_array_unsafe_get(v,(eOffset0 + 2))) );
HXDLIN( 487)						Float val27 = (val26 + ( (Float)(_hx_array_unsafe_get(v,(eOffset1 + 2))) ));
HXDLIN( 487)						u->__unsafe_set((dOffset0 + 2),val27);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val28 = (v41_211 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 487)						Float val29 = (val28 - (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((dOffset1 + 3),val29);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val30 = (v40_201 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 487)						Float val31 = (val30 + (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((dOffset1 + 2),val31);
            					}
HXDLIN( 487)					aaOffset1 = (aaOffset1 - 8);
HXDLIN( 487)					dOffset0 = (dOffset0 + 4);
HXDLIN( 487)					dOffset1 = (dOffset1 + 4);
HXDLIN( 487)					eOffset0 = (eOffset0 + 4);
HXDLIN( 487)					eOffset1 = (eOffset1 + 4);
            				}
            			}
HXDLIN( 487)			::Array< int > log2_4 = ::Array_obj< int >::fromData( _hx_array_data_1815443d_52,16);
HXDLIN( 487)			int ld;
HXDLIN( 487)			if ((n < 16384)) {
HXLINE( 487)				if ((n < 16)) {
HXLINE( 487)					ld = log2_4->__get(n);
            				}
            				else {
HXLINE( 487)					if ((n < 512)) {
HXLINE( 487)						ld = (5 + log2_4->__get((n >> 5)));
            					}
            					else {
HXLINE( 487)						ld = (10 + log2_4->__get((n >> 10)));
            					}
            				}
            			}
            			else {
HXLINE( 487)				if ((n < 16777216)) {
HXLINE( 487)					if ((n < 524288)) {
HXLINE( 487)						ld = (15 + log2_4->__get((n >> 15)));
            					}
            					else {
HXLINE( 487)						ld = (20 + log2_4->__get((n >> 20)));
            					}
            				}
            				else {
HXLINE( 487)					if ((n < 536870912)) {
HXLINE( 487)						ld = (25 + log2_4->__get((n >> 25)));
            					}
            					else {
HXLINE( 487)						if ((n < (int)-2147483648)) {
HXLINE( 487)							ld = (30 + log2_4->__get((n >> 30)));
            						}
            						else {
HXLINE( 487)							ld = 0;
            						}
            					}
            				}
            			}
HXDLIN( 487)			int ld1 = (ld - 1);
HXDLIN( 487)			{
HXLINE( 487)				int i_off = ((n2 - 1) - (n4 * 0));
HXDLIN( 487)				int eeOffset0 = i_off;
HXDLIN( 487)				int eeOffset2 = (i_off + -((n >> 3)));
HXDLIN( 487)				int aOffset = 0;
HXDLIN( 487)				int i = (((n >> 4) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i = (i - 1);
HXDLIN( 487)					if (!((i > 0))) {
HXLINE( 487)						goto _hx_goto_35;
            					}
HXDLIN( 487)					Float k00_20 = ( (Float)(_hx_array_unsafe_get(u,eeOffset0)) );
HXDLIN( 487)					Float k00_201 = (k00_20 - ( (Float)(_hx_array_unsafe_get(u,eeOffset2)) ));
HXDLIN( 487)					Float k01_21 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -1))) );
HXDLIN( 487)					Float k01_211 = (k01_21 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g = eeOffset0;
HXDLIN( 487)						::Array< Float > _g1 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val32 = ( (Float)(_hx_array_unsafe_get(_g1,_g)) );
HXDLIN( 487)							Float val33 = (val32 + ( (Float)(_hx_array_unsafe_get(u,eeOffset2)) ));
HXDLIN( 487)							_g1->__unsafe_set(_g,val33);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g2 = (eeOffset0 + -1);
HXDLIN( 487)						::Array< Float > _g11 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val34 = ( (Float)(_hx_array_unsafe_get(_g11,_g2)) );
HXDLIN( 487)							Float val35 = (val34 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -1))) ));
HXDLIN( 487)							_g11->__unsafe_set(_g2,val35);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val36 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val37 = (val36 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eeOffset2,val37);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val38 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val39 = (val38 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -1),val39);
            					}
HXDLIN( 487)					aOffset = (aOffset + 8);
HXDLIN( 487)					Float k00_202 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -2))) );
HXDLIN( 487)					k00_201 = (k00_202 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -2))) ));
HXDLIN( 487)					Float k01_212 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -3))) );
HXDLIN( 487)					k01_211 = (k01_212 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g3 = (eeOffset0 + -2);
HXDLIN( 487)						::Array< Float > _g12 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val40 = ( (Float)(_hx_array_unsafe_get(_g12,_g3)) );
HXDLIN( 487)							Float val41 = (val40 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -2))) ));
HXDLIN( 487)							_g12->__unsafe_set(_g3,val41);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g4 = (eeOffset0 + -3);
HXDLIN( 487)						::Array< Float > _g13 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val42 = ( (Float)(_hx_array_unsafe_get(_g13,_g4)) );
HXDLIN( 487)							Float val43 = (val42 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -3))) ));
HXDLIN( 487)							_g13->__unsafe_set(_g4,val43);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val44 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val45 = (val44 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -2),val45);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val46 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val47 = (val46 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -3),val47);
            					}
HXDLIN( 487)					aOffset = (aOffset + 8);
HXDLIN( 487)					Float k00_203 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -4))) );
HXDLIN( 487)					k00_201 = (k00_203 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -4))) ));
HXDLIN( 487)					Float k01_213 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -5))) );
HXDLIN( 487)					k01_211 = (k01_213 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g5 = (eeOffset0 + -4);
HXDLIN( 487)						::Array< Float > _g14 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val48 = ( (Float)(_hx_array_unsafe_get(_g14,_g5)) );
HXDLIN( 487)							Float val49 = (val48 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -4))) ));
HXDLIN( 487)							_g14->__unsafe_set(_g5,val49);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g6 = (eeOffset0 + -5);
HXDLIN( 487)						::Array< Float > _g15 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val50 = ( (Float)(_hx_array_unsafe_get(_g15,_g6)) );
HXDLIN( 487)							Float val51 = (val50 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -5))) ));
HXDLIN( 487)							_g15->__unsafe_set(_g6,val51);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val52 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val53 = (val52 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -4),val53);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val54 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val55 = (val54 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -5),val55);
            					}
HXDLIN( 487)					aOffset = (aOffset + 8);
HXDLIN( 487)					Float k00_204 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -6))) );
HXDLIN( 487)					k00_201 = (k00_204 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -6))) ));
HXDLIN( 487)					Float k01_214 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset0 + -7))) );
HXDLIN( 487)					k01_211 = (k01_214 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g7 = (eeOffset0 + -6);
HXDLIN( 487)						::Array< Float > _g16 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val56 = ( (Float)(_hx_array_unsafe_get(_g16,_g7)) );
HXDLIN( 487)							Float val57 = (val56 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -6))) ));
HXDLIN( 487)							_g16->__unsafe_set(_g7,val57);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g8 = (eeOffset0 + -7);
HXDLIN( 487)						::Array< Float > _g17 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val58 = ( (Float)(_hx_array_unsafe_get(_g17,_g8)) );
HXDLIN( 487)							Float val59 = (val58 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset2 + -7))) ));
HXDLIN( 487)							_g17->__unsafe_set(_g8,val59);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val60 = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val61 = (val60 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -6),val61);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val62 = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 487)						Float val63 = (val62 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset2 + -7),val63);
            					}
HXDLIN( 487)					aOffset = (aOffset + 8);
HXDLIN( 487)					eeOffset0 = (eeOffset0 - 8);
HXDLIN( 487)					eeOffset2 = (eeOffset2 - 8);
            				}
            				_hx_goto_35:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int i_off1 = ((n2 - 1) - n4);
HXDLIN( 487)				int eeOffset01 = i_off1;
HXDLIN( 487)				int eeOffset21 = (i_off1 + -((n >> 3)));
HXDLIN( 487)				int aOffset1 = 0;
HXDLIN( 487)				int i1 = (((n >> 4) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i1 = (i1 - 1);
HXDLIN( 487)					if (!((i1 > 0))) {
HXLINE( 487)						goto _hx_goto_36;
            					}
HXDLIN( 487)					Float k00_205 = ( (Float)(_hx_array_unsafe_get(u,eeOffset01)) );
HXDLIN( 487)					Float k00_206 = (k00_205 - ( (Float)(_hx_array_unsafe_get(u,eeOffset21)) ));
HXDLIN( 487)					Float k01_215 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -1))) );
HXDLIN( 487)					Float k01_216 = (k01_215 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g9 = eeOffset01;
HXDLIN( 487)						::Array< Float > _g18 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val64 = ( (Float)(_hx_array_unsafe_get(_g18,_g9)) );
HXDLIN( 487)							Float val65 = (val64 + ( (Float)(_hx_array_unsafe_get(u,eeOffset21)) ));
HXDLIN( 487)							_g18->__unsafe_set(_g9,val65);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g10 = (eeOffset01 + -1);
HXDLIN( 487)						::Array< Float > _g19 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val66 = ( (Float)(_hx_array_unsafe_get(_g19,_g10)) );
HXDLIN( 487)							Float val67 = (val66 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -1))) ));
HXDLIN( 487)							_g19->__unsafe_set(_g10,val67);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val68 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val69 = (val68 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eeOffset21,val69);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val70 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val71 = (val70 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -1),val71);
            					}
HXDLIN( 487)					aOffset1 = (aOffset1 + 8);
HXDLIN( 487)					Float k00_207 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -2))) );
HXDLIN( 487)					k00_206 = (k00_207 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -2))) ));
HXDLIN( 487)					Float k01_217 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -3))) );
HXDLIN( 487)					k01_216 = (k01_217 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g20 = (eeOffset01 + -2);
HXDLIN( 487)						::Array< Float > _g110 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val72 = ( (Float)(_hx_array_unsafe_get(_g110,_g20)) );
HXDLIN( 487)							Float val73 = (val72 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -2))) ));
HXDLIN( 487)							_g110->__unsafe_set(_g20,val73);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g21 = (eeOffset01 + -3);
HXDLIN( 487)						::Array< Float > _g111 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val74 = ( (Float)(_hx_array_unsafe_get(_g111,_g21)) );
HXDLIN( 487)							Float val75 = (val74 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -3))) ));
HXDLIN( 487)							_g111->__unsafe_set(_g21,val75);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val76 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val77 = (val76 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -2),val77);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val78 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val79 = (val78 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -3),val79);
            					}
HXDLIN( 487)					aOffset1 = (aOffset1 + 8);
HXDLIN( 487)					Float k00_208 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -4))) );
HXDLIN( 487)					k00_206 = (k00_208 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -4))) ));
HXDLIN( 487)					Float k01_218 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -5))) );
HXDLIN( 487)					k01_216 = (k01_218 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g22 = (eeOffset01 + -4);
HXDLIN( 487)						::Array< Float > _g112 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val80 = ( (Float)(_hx_array_unsafe_get(_g112,_g22)) );
HXDLIN( 487)							Float val81 = (val80 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -4))) ));
HXDLIN( 487)							_g112->__unsafe_set(_g22,val81);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g23 = (eeOffset01 + -5);
HXDLIN( 487)						::Array< Float > _g113 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val82 = ( (Float)(_hx_array_unsafe_get(_g113,_g23)) );
HXDLIN( 487)							Float val83 = (val82 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -5))) ));
HXDLIN( 487)							_g113->__unsafe_set(_g23,val83);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val84 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val85 = (val84 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -4),val85);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val86 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val87 = (val86 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -5),val87);
            					}
HXDLIN( 487)					aOffset1 = (aOffset1 + 8);
HXDLIN( 487)					Float k00_209 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -6))) );
HXDLIN( 487)					k00_206 = (k00_209 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -6))) ));
HXDLIN( 487)					Float k01_219 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset01 + -7))) );
HXDLIN( 487)					k01_216 = (k01_219 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g24 = (eeOffset01 + -6);
HXDLIN( 487)						::Array< Float > _g114 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val88 = ( (Float)(_hx_array_unsafe_get(_g114,_g24)) );
HXDLIN( 487)							Float val89 = (val88 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -6))) ));
HXDLIN( 487)							_g114->__unsafe_set(_g24,val89);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g25 = (eeOffset01 + -7);
HXDLIN( 487)						::Array< Float > _g115 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val90 = ( (Float)(_hx_array_unsafe_get(_g115,_g25)) );
HXDLIN( 487)							Float val91 = (val90 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset21 + -7))) ));
HXDLIN( 487)							_g115->__unsafe_set(_g25,val91);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val92 = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val93 = (val92 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -6),val93);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val94 = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 487)						Float val95 = (val94 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eeOffset21 + -7),val95);
            					}
HXDLIN( 487)					aOffset1 = (aOffset1 + 8);
HXDLIN( 487)					eeOffset01 = (eeOffset01 - 8);
HXDLIN( 487)					eeOffset21 = (eeOffset21 - 8);
            				}
            				_hx_goto_36:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int d0 = ((n2 - 1) - (n8 * 0));
HXDLIN( 487)				int aOffset2 = 0;
HXDLIN( 487)				int eOffset01 = d0;
HXDLIN( 487)				int eOffset2 = (d0 + -((n >> 4)));
HXDLIN( 487)				int i2 = (((n >> 5) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i2 = (i2 - 1);
HXDLIN( 487)					if (!((i2 > 0))) {
HXLINE( 487)						goto _hx_goto_37;
            					}
HXDLIN( 487)					Float k00_2010 = ( (Float)(_hx_array_unsafe_get(u,eOffset01)) );
HXDLIN( 487)					Float k00_2011 = (k00_2010 - ( (Float)(_hx_array_unsafe_get(u,eOffset2)) ));
HXDLIN( 487)					Float k01_2110 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -1))) );
HXDLIN( 487)					Float k01_2111 = (k01_2110 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g26 = eOffset01;
HXDLIN( 487)						::Array< Float > _g116 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val96 = ( (Float)(_hx_array_unsafe_get(_g116,_g26)) );
HXDLIN( 487)							Float val97 = (val96 + ( (Float)(_hx_array_unsafe_get(u,eOffset2)) ));
HXDLIN( 487)							_g116->__unsafe_set(_g26,val97);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g27 = (eOffset01 + -1);
HXDLIN( 487)						::Array< Float > _g117 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val98 = ( (Float)(_hx_array_unsafe_get(_g117,_g27)) );
HXDLIN( 487)							Float val99 = (val98 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -1))) ));
HXDLIN( 487)							_g117->__unsafe_set(_g27,val99);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val100 = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val101 = (val100 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eOffset2,val101);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val102 = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val103 = (val102 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -1),val103);
            					}
HXDLIN( 487)					aOffset2 = (aOffset2 + 16);
HXDLIN( 487)					Float k00_2012 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -2))) );
HXDLIN( 487)					k00_2011 = (k00_2012 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -2))) ));
HXDLIN( 487)					Float k01_2112 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -3))) );
HXDLIN( 487)					k01_2111 = (k01_2112 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g28 = (eOffset01 + -2);
HXDLIN( 487)						::Array< Float > _g118 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val104 = ( (Float)(_hx_array_unsafe_get(_g118,_g28)) );
HXDLIN( 487)							Float val105 = (val104 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -2))) ));
HXDLIN( 487)							_g118->__unsafe_set(_g28,val105);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g29 = (eOffset01 + -3);
HXDLIN( 487)						::Array< Float > _g119 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val106 = ( (Float)(_hx_array_unsafe_get(_g119,_g29)) );
HXDLIN( 487)							Float val107 = (val106 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -3))) ));
HXDLIN( 487)							_g119->__unsafe_set(_g29,val107);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val108 = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val109 = (val108 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -2),val109);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val110 = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val111 = (val110 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -3),val111);
            					}
HXDLIN( 487)					aOffset2 = (aOffset2 + 16);
HXDLIN( 487)					Float k00_2013 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -4))) );
HXDLIN( 487)					k00_2011 = (k00_2013 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -4))) ));
HXDLIN( 487)					Float k01_2113 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -5))) );
HXDLIN( 487)					k01_2111 = (k01_2113 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g30 = (eOffset01 + -4);
HXDLIN( 487)						::Array< Float > _g120 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val112 = ( (Float)(_hx_array_unsafe_get(_g120,_g30)) );
HXDLIN( 487)							Float val113 = (val112 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -4))) ));
HXDLIN( 487)							_g120->__unsafe_set(_g30,val113);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g31 = (eOffset01 + -5);
HXDLIN( 487)						::Array< Float > _g121 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val114 = ( (Float)(_hx_array_unsafe_get(_g121,_g31)) );
HXDLIN( 487)							Float val115 = (val114 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -5))) ));
HXDLIN( 487)							_g121->__unsafe_set(_g31,val115);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val116 = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val117 = (val116 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -4),val117);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val118 = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val119 = (val118 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -5),val119);
            					}
HXDLIN( 487)					aOffset2 = (aOffset2 + 16);
HXDLIN( 487)					Float k00_2014 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -6))) );
HXDLIN( 487)					k00_2011 = (k00_2014 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -6))) ));
HXDLIN( 487)					Float k01_2114 = ( (Float)(_hx_array_unsafe_get(u,(eOffset01 + -7))) );
HXDLIN( 487)					k01_2111 = (k01_2114 - ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g32 = (eOffset01 + -6);
HXDLIN( 487)						::Array< Float > _g122 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val120 = ( (Float)(_hx_array_unsafe_get(_g122,_g32)) );
HXDLIN( 487)							Float val121 = (val120 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -6))) ));
HXDLIN( 487)							_g122->__unsafe_set(_g32,val121);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g33 = (eOffset01 + -7);
HXDLIN( 487)						::Array< Float > _g123 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val122 = ( (Float)(_hx_array_unsafe_get(_g123,_g33)) );
HXDLIN( 487)							Float val123 = (val122 + ( (Float)(_hx_array_unsafe_get(u,(eOffset2 + -7))) ));
HXDLIN( 487)							_g123->__unsafe_set(_g33,val123);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val124 = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val125 = (val124 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -6),val125);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val126 = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 487)						Float val127 = (val126 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset2 + -7),val127);
            					}
HXDLIN( 487)					eOffset01 = (eOffset01 - 8);
HXDLIN( 487)					eOffset2 = (eOffset2 - 8);
HXDLIN( 487)					aOffset2 = (aOffset2 + 16);
            				}
            				_hx_goto_37:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int d01 = ((n2 - 1) - n8);
HXDLIN( 487)				int aOffset3 = 0;
HXDLIN( 487)				int eOffset02 = d01;
HXDLIN( 487)				int eOffset21 = (d01 + -((n >> 4)));
HXDLIN( 487)				int i3 = (((n >> 5) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i3 = (i3 - 1);
HXDLIN( 487)					if (!((i3 > 0))) {
HXLINE( 487)						goto _hx_goto_38;
            					}
HXDLIN( 487)					Float k00_2015 = ( (Float)(_hx_array_unsafe_get(u,eOffset02)) );
HXDLIN( 487)					Float k00_2016 = (k00_2015 - ( (Float)(_hx_array_unsafe_get(u,eOffset21)) ));
HXDLIN( 487)					Float k01_2115 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -1))) );
HXDLIN( 487)					Float k01_2116 = (k01_2115 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g34 = eOffset02;
HXDLIN( 487)						::Array< Float > _g124 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val128 = ( (Float)(_hx_array_unsafe_get(_g124,_g34)) );
HXDLIN( 487)							Float val129 = (val128 + ( (Float)(_hx_array_unsafe_get(u,eOffset21)) ));
HXDLIN( 487)							_g124->__unsafe_set(_g34,val129);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g35 = (eOffset02 + -1);
HXDLIN( 487)						::Array< Float > _g125 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val130 = ( (Float)(_hx_array_unsafe_get(_g125,_g35)) );
HXDLIN( 487)							Float val131 = (val130 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -1))) ));
HXDLIN( 487)							_g125->__unsafe_set(_g35,val131);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val132 = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val133 = (val132 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eOffset21,val133);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val134 = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val135 = (val134 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -1),val135);
            					}
HXDLIN( 487)					aOffset3 = (aOffset3 + 16);
HXDLIN( 487)					Float k00_2017 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -2))) );
HXDLIN( 487)					k00_2016 = (k00_2017 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -2))) ));
HXDLIN( 487)					Float k01_2117 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -3))) );
HXDLIN( 487)					k01_2116 = (k01_2117 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g36 = (eOffset02 + -2);
HXDLIN( 487)						::Array< Float > _g126 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val136 = ( (Float)(_hx_array_unsafe_get(_g126,_g36)) );
HXDLIN( 487)							Float val137 = (val136 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -2))) ));
HXDLIN( 487)							_g126->__unsafe_set(_g36,val137);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g37 = (eOffset02 + -3);
HXDLIN( 487)						::Array< Float > _g127 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val138 = ( (Float)(_hx_array_unsafe_get(_g127,_g37)) );
HXDLIN( 487)							Float val139 = (val138 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -3))) ));
HXDLIN( 487)							_g127->__unsafe_set(_g37,val139);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val140 = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val141 = (val140 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -2),val141);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val142 = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val143 = (val142 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -3),val143);
            					}
HXDLIN( 487)					aOffset3 = (aOffset3 + 16);
HXDLIN( 487)					Float k00_2018 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -4))) );
HXDLIN( 487)					k00_2016 = (k00_2018 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -4))) ));
HXDLIN( 487)					Float k01_2118 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -5))) );
HXDLIN( 487)					k01_2116 = (k01_2118 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g38 = (eOffset02 + -4);
HXDLIN( 487)						::Array< Float > _g128 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val144 = ( (Float)(_hx_array_unsafe_get(_g128,_g38)) );
HXDLIN( 487)							Float val145 = (val144 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -4))) ));
HXDLIN( 487)							_g128->__unsafe_set(_g38,val145);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g39 = (eOffset02 + -5);
HXDLIN( 487)						::Array< Float > _g129 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val146 = ( (Float)(_hx_array_unsafe_get(_g129,_g39)) );
HXDLIN( 487)							Float val147 = (val146 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -5))) ));
HXDLIN( 487)							_g129->__unsafe_set(_g39,val147);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val148 = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val149 = (val148 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -4),val149);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val150 = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val151 = (val150 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -5),val151);
            					}
HXDLIN( 487)					aOffset3 = (aOffset3 + 16);
HXDLIN( 487)					Float k00_2019 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -6))) );
HXDLIN( 487)					k00_2016 = (k00_2019 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -6))) ));
HXDLIN( 487)					Float k01_2119 = ( (Float)(_hx_array_unsafe_get(u,(eOffset02 + -7))) );
HXDLIN( 487)					k01_2116 = (k01_2119 - ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g40 = (eOffset02 + -6);
HXDLIN( 487)						::Array< Float > _g130 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val152 = ( (Float)(_hx_array_unsafe_get(_g130,_g40)) );
HXDLIN( 487)							Float val153 = (val152 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -6))) ));
HXDLIN( 487)							_g130->__unsafe_set(_g40,val153);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g41 = (eOffset02 + -7);
HXDLIN( 487)						::Array< Float > _g131 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val154 = ( (Float)(_hx_array_unsafe_get(_g131,_g41)) );
HXDLIN( 487)							Float val155 = (val154 + ( (Float)(_hx_array_unsafe_get(u,(eOffset21 + -7))) ));
HXDLIN( 487)							_g131->__unsafe_set(_g41,val155);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val156 = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val157 = (val156 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -6),val157);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val158 = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 487)						Float val159 = (val158 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset21 + -7),val159);
            					}
HXDLIN( 487)					eOffset02 = (eOffset02 - 8);
HXDLIN( 487)					eOffset21 = (eOffset21 - 8);
HXDLIN( 487)					aOffset3 = (aOffset3 + 16);
            				}
            				_hx_goto_38:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int d02 = ((n2 - 1) - (n8 * 2));
HXDLIN( 487)				int aOffset4 = 0;
HXDLIN( 487)				int eOffset03 = d02;
HXDLIN( 487)				int eOffset22 = (d02 + -((n >> 4)));
HXDLIN( 487)				int i4 = (((n >> 5) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i4 = (i4 - 1);
HXDLIN( 487)					if (!((i4 > 0))) {
HXLINE( 487)						goto _hx_goto_39;
            					}
HXDLIN( 487)					Float k00_2020 = ( (Float)(_hx_array_unsafe_get(u,eOffset03)) );
HXDLIN( 487)					Float k00_2021 = (k00_2020 - ( (Float)(_hx_array_unsafe_get(u,eOffset22)) ));
HXDLIN( 487)					Float k01_2120 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -1))) );
HXDLIN( 487)					Float k01_2121 = (k01_2120 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g42 = eOffset03;
HXDLIN( 487)						::Array< Float > _g132 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val160 = ( (Float)(_hx_array_unsafe_get(_g132,_g42)) );
HXDLIN( 487)							Float val161 = (val160 + ( (Float)(_hx_array_unsafe_get(u,eOffset22)) ));
HXDLIN( 487)							_g132->__unsafe_set(_g42,val161);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g43 = (eOffset03 + -1);
HXDLIN( 487)						::Array< Float > _g133 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val162 = ( (Float)(_hx_array_unsafe_get(_g133,_g43)) );
HXDLIN( 487)							Float val163 = (val162 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -1))) ));
HXDLIN( 487)							_g133->__unsafe_set(_g43,val163);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val164 = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val165 = (val164 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eOffset22,val165);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val166 = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val167 = (val166 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -1),val167);
            					}
HXDLIN( 487)					aOffset4 = (aOffset4 + 16);
HXDLIN( 487)					Float k00_2022 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -2))) );
HXDLIN( 487)					k00_2021 = (k00_2022 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -2))) ));
HXDLIN( 487)					Float k01_2122 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -3))) );
HXDLIN( 487)					k01_2121 = (k01_2122 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g44 = (eOffset03 + -2);
HXDLIN( 487)						::Array< Float > _g134 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val168 = ( (Float)(_hx_array_unsafe_get(_g134,_g44)) );
HXDLIN( 487)							Float val169 = (val168 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -2))) ));
HXDLIN( 487)							_g134->__unsafe_set(_g44,val169);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g45 = (eOffset03 + -3);
HXDLIN( 487)						::Array< Float > _g135 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val170 = ( (Float)(_hx_array_unsafe_get(_g135,_g45)) );
HXDLIN( 487)							Float val171 = (val170 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -3))) ));
HXDLIN( 487)							_g135->__unsafe_set(_g45,val171);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val172 = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val173 = (val172 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -2),val173);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val174 = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val175 = (val174 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -3),val175);
            					}
HXDLIN( 487)					aOffset4 = (aOffset4 + 16);
HXDLIN( 487)					Float k00_2023 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -4))) );
HXDLIN( 487)					k00_2021 = (k00_2023 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -4))) ));
HXDLIN( 487)					Float k01_2123 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -5))) );
HXDLIN( 487)					k01_2121 = (k01_2123 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g46 = (eOffset03 + -4);
HXDLIN( 487)						::Array< Float > _g136 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val176 = ( (Float)(_hx_array_unsafe_get(_g136,_g46)) );
HXDLIN( 487)							Float val177 = (val176 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -4))) ));
HXDLIN( 487)							_g136->__unsafe_set(_g46,val177);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g47 = (eOffset03 + -5);
HXDLIN( 487)						::Array< Float > _g137 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val178 = ( (Float)(_hx_array_unsafe_get(_g137,_g47)) );
HXDLIN( 487)							Float val179 = (val178 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -5))) ));
HXDLIN( 487)							_g137->__unsafe_set(_g47,val179);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val180 = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val181 = (val180 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -4),val181);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val182 = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val183 = (val182 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -5),val183);
            					}
HXDLIN( 487)					aOffset4 = (aOffset4 + 16);
HXDLIN( 487)					Float k00_2024 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -6))) );
HXDLIN( 487)					k00_2021 = (k00_2024 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -6))) ));
HXDLIN( 487)					Float k01_2124 = ( (Float)(_hx_array_unsafe_get(u,(eOffset03 + -7))) );
HXDLIN( 487)					k01_2121 = (k01_2124 - ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g48 = (eOffset03 + -6);
HXDLIN( 487)						::Array< Float > _g138 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val184 = ( (Float)(_hx_array_unsafe_get(_g138,_g48)) );
HXDLIN( 487)							Float val185 = (val184 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -6))) ));
HXDLIN( 487)							_g138->__unsafe_set(_g48,val185);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g49 = (eOffset03 + -7);
HXDLIN( 487)						::Array< Float > _g139 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val186 = ( (Float)(_hx_array_unsafe_get(_g139,_g49)) );
HXDLIN( 487)							Float val187 = (val186 + ( (Float)(_hx_array_unsafe_get(u,(eOffset22 + -7))) ));
HXDLIN( 487)							_g139->__unsafe_set(_g49,val187);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val188 = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val189 = (val188 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -6),val189);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val190 = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 487)						Float val191 = (val190 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset22 + -7),val191);
            					}
HXDLIN( 487)					eOffset03 = (eOffset03 - 8);
HXDLIN( 487)					eOffset22 = (eOffset22 - 8);
HXDLIN( 487)					aOffset4 = (aOffset4 + 16);
            				}
            				_hx_goto_39:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int d03 = ((n2 - 1) - (n8 * 3));
HXDLIN( 487)				int aOffset5 = 0;
HXDLIN( 487)				int eOffset04 = d03;
HXDLIN( 487)				int eOffset23 = (d03 + -((n >> 4)));
HXDLIN( 487)				int i5 = (((n >> 5) >> 2) + 1);
HXDLIN( 487)				while(true){
HXLINE( 487)					i5 = (i5 - 1);
HXDLIN( 487)					if (!((i5 > 0))) {
HXLINE( 487)						goto _hx_goto_40;
            					}
HXDLIN( 487)					Float k00_2025 = ( (Float)(_hx_array_unsafe_get(u,eOffset04)) );
HXDLIN( 487)					Float k00_2026 = (k00_2025 - ( (Float)(_hx_array_unsafe_get(u,eOffset23)) ));
HXDLIN( 487)					Float k01_2125 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -1))) );
HXDLIN( 487)					Float k01_2126 = (k01_2125 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -1))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g50 = eOffset04;
HXDLIN( 487)						::Array< Float > _g140 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val192 = ( (Float)(_hx_array_unsafe_get(_g140,_g50)) );
HXDLIN( 487)							Float val193 = (val192 + ( (Float)(_hx_array_unsafe_get(u,eOffset23)) ));
HXDLIN( 487)							_g140->__unsafe_set(_g50,val193);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g51 = (eOffset04 + -1);
HXDLIN( 487)						::Array< Float > _g141 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val194 = ( (Float)(_hx_array_unsafe_get(_g141,_g51)) );
HXDLIN( 487)							Float val195 = (val194 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -1))) ));
HXDLIN( 487)							_g141->__unsafe_set(_g51,val195);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val196 = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val197 = (val196 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set(eOffset23,val197);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val198 = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val199 = (val198 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -1),val199);
            					}
HXDLIN( 487)					aOffset5 = (aOffset5 + 16);
HXDLIN( 487)					Float k00_2027 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -2))) );
HXDLIN( 487)					k00_2026 = (k00_2027 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -2))) ));
HXDLIN( 487)					Float k01_2127 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -3))) );
HXDLIN( 487)					k01_2126 = (k01_2127 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -3))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g52 = (eOffset04 + -2);
HXDLIN( 487)						::Array< Float > _g142 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val200 = ( (Float)(_hx_array_unsafe_get(_g142,_g52)) );
HXDLIN( 487)							Float val201 = (val200 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -2))) ));
HXDLIN( 487)							_g142->__unsafe_set(_g52,val201);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g53 = (eOffset04 + -3);
HXDLIN( 487)						::Array< Float > _g143 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val202 = ( (Float)(_hx_array_unsafe_get(_g143,_g53)) );
HXDLIN( 487)							Float val203 = (val202 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -3))) ));
HXDLIN( 487)							_g143->__unsafe_set(_g53,val203);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val204 = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val205 = (val204 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -2),val205);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val206 = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val207 = (val206 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -3),val207);
            					}
HXDLIN( 487)					aOffset5 = (aOffset5 + 16);
HXDLIN( 487)					Float k00_2028 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -4))) );
HXDLIN( 487)					k00_2026 = (k00_2028 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -4))) ));
HXDLIN( 487)					Float k01_2128 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -5))) );
HXDLIN( 487)					k01_2126 = (k01_2128 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -5))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g54 = (eOffset04 + -4);
HXDLIN( 487)						::Array< Float > _g144 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val208 = ( (Float)(_hx_array_unsafe_get(_g144,_g54)) );
HXDLIN( 487)							Float val209 = (val208 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -4))) ));
HXDLIN( 487)							_g144->__unsafe_set(_g54,val209);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g55 = (eOffset04 + -5);
HXDLIN( 487)						::Array< Float > _g145 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val210 = ( (Float)(_hx_array_unsafe_get(_g145,_g55)) );
HXDLIN( 487)							Float val211 = (val210 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -5))) ));
HXDLIN( 487)							_g145->__unsafe_set(_g55,val211);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val212 = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val213 = (val212 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -4),val213);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val214 = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val215 = (val214 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -5),val215);
            					}
HXDLIN( 487)					aOffset5 = (aOffset5 + 16);
HXDLIN( 487)					Float k00_2029 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -6))) );
HXDLIN( 487)					k00_2026 = (k00_2029 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -6))) ));
HXDLIN( 487)					Float k01_2129 = ( (Float)(_hx_array_unsafe_get(u,(eOffset04 + -7))) );
HXDLIN( 487)					k01_2126 = (k01_2129 - ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -7))) ));
HXDLIN( 487)					{
HXLINE( 487)						int _g56 = (eOffset04 + -6);
HXDLIN( 487)						::Array< Float > _g146 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val216 = ( (Float)(_hx_array_unsafe_get(_g146,_g56)) );
HXDLIN( 487)							Float val217 = (val216 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -6))) ));
HXDLIN( 487)							_g146->__unsafe_set(_g56,val217);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						int _g57 = (eOffset04 + -7);
HXDLIN( 487)						::Array< Float > _g147 = u;
HXDLIN( 487)						{
HXLINE( 487)							Float val218 = ( (Float)(_hx_array_unsafe_get(_g147,_g57)) );
HXDLIN( 487)							Float val219 = (val218 + ( (Float)(_hx_array_unsafe_get(u,(eOffset23 + -7))) ));
HXDLIN( 487)							_g147->__unsafe_set(_g57,val219);
            						}
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val220 = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val221 = (val220 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -6),val221);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val222 = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 487)						Float val223 = (val222 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + 1))) )));
HXDLIN( 487)						u->__unsafe_set((eOffset23 + -7),val223);
            					}
HXDLIN( 487)					eOffset04 = (eOffset04 - 8);
HXDLIN( 487)					eOffset23 = (eOffset23 - 8);
HXDLIN( 487)					aOffset5 = (aOffset5 + 16);
            				}
            				_hx_goto_40:;
            			}
HXDLIN( 487)			{
HXLINE( 487)				int _g58 = 2;
HXDLIN( 487)				int _g148 = ((ld1 - 3) >> 1);
HXDLIN( 487)				while((_g58 < _g148)){
HXLINE( 487)					_g58 = (_g58 + 1);
HXDLIN( 487)					int l = (_g58 - 1);
HXDLIN( 487)					int k0 = (n >> (l + 2));
HXDLIN( 487)					int k0_2 = (k0 >> 1);
HXDLIN( 487)					int lim = (1 << (l + 1));
HXDLIN( 487)					{
HXLINE( 487)						int _g59 = 0;
HXDLIN( 487)						int _g149 = lim;
HXDLIN( 487)						while((_g59 < _g149)){
HXLINE( 487)							_g59 = (_g59 + 1);
HXDLIN( 487)							int i6 = (_g59 - 1);
HXDLIN( 487)							{
HXLINE( 487)								int d04 = ((n2 - 1) - (k0 * i6));
HXDLIN( 487)								int k1 = (1 << (l + 3));
HXDLIN( 487)								int aOffset6 = 0;
HXDLIN( 487)								int eOffset05 = d04;
HXDLIN( 487)								int eOffset24 = (d04 + -(k0_2));
HXDLIN( 487)								int i7 = (((n >> (l + 4)) >> 2) + 1);
HXDLIN( 487)								while(true){
HXLINE( 487)									i7 = (i7 - 1);
HXDLIN( 487)									if (!((i7 > 0))) {
HXLINE( 487)										goto _hx_goto_43;
            									}
HXDLIN( 487)									Float k00_2030 = ( (Float)(_hx_array_unsafe_get(u,eOffset05)) );
HXDLIN( 487)									Float k00_2031 = (k00_2030 - ( (Float)(_hx_array_unsafe_get(u,eOffset24)) ));
HXDLIN( 487)									Float k01_2130 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -1))) );
HXDLIN( 487)									Float k01_2131 = (k01_2130 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -1))) ));
HXDLIN( 487)									{
HXLINE( 487)										int _g60 = eOffset05;
HXDLIN( 487)										::Array< Float > _g150 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val224 = ( (Float)(_hx_array_unsafe_get(_g150,_g60)) );
HXDLIN( 487)											Float val225 = (val224 + ( (Float)(_hx_array_unsafe_get(u,eOffset24)) ));
HXDLIN( 487)											_g150->__unsafe_set(_g60,val225);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										int _g61 = (eOffset05 + -1);
HXDLIN( 487)										::Array< Float > _g151 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val226 = ( (Float)(_hx_array_unsafe_get(_g151,_g61)) );
HXDLIN( 487)											Float val227 = (val226 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -1))) ));
HXDLIN( 487)											_g151->__unsafe_set(_g61,val227);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val228 = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val229 = (val228 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set(eOffset24,val229);
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val230 = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val231 = (val230 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -1),val231);
            									}
HXDLIN( 487)									aOffset6 = (aOffset6 + k1);
HXDLIN( 487)									Float k00_2032 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -2))) );
HXDLIN( 487)									k00_2031 = (k00_2032 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -2))) ));
HXDLIN( 487)									Float k01_2132 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -3))) );
HXDLIN( 487)									k01_2131 = (k01_2132 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -3))) ));
HXDLIN( 487)									{
HXLINE( 487)										int _g62 = (eOffset05 + -2);
HXDLIN( 487)										::Array< Float > _g152 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val232 = ( (Float)(_hx_array_unsafe_get(_g152,_g62)) );
HXDLIN( 487)											Float val233 = (val232 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -2))) ));
HXDLIN( 487)											_g152->__unsafe_set(_g62,val233);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										int _g63 = (eOffset05 + -3);
HXDLIN( 487)										::Array< Float > _g153 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val234 = ( (Float)(_hx_array_unsafe_get(_g153,_g63)) );
HXDLIN( 487)											Float val235 = (val234 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -3))) ));
HXDLIN( 487)											_g153->__unsafe_set(_g63,val235);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val236 = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val237 = (val236 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -2),val237);
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val238 = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val239 = (val238 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -3),val239);
            									}
HXDLIN( 487)									aOffset6 = (aOffset6 + k1);
HXDLIN( 487)									Float k00_2033 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -4))) );
HXDLIN( 487)									k00_2031 = (k00_2033 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -4))) ));
HXDLIN( 487)									Float k01_2133 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -5))) );
HXDLIN( 487)									k01_2131 = (k01_2133 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -5))) ));
HXDLIN( 487)									{
HXLINE( 487)										int _g64 = (eOffset05 + -4);
HXDLIN( 487)										::Array< Float > _g154 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val240 = ( (Float)(_hx_array_unsafe_get(_g154,_g64)) );
HXDLIN( 487)											Float val241 = (val240 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -4))) ));
HXDLIN( 487)											_g154->__unsafe_set(_g64,val241);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										int _g65 = (eOffset05 + -5);
HXDLIN( 487)										::Array< Float > _g155 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val242 = ( (Float)(_hx_array_unsafe_get(_g155,_g65)) );
HXDLIN( 487)											Float val243 = (val242 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -5))) ));
HXDLIN( 487)											_g155->__unsafe_set(_g65,val243);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val244 = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val245 = (val244 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -4),val245);
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val246 = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val247 = (val246 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -5),val247);
            									}
HXDLIN( 487)									aOffset6 = (aOffset6 + k1);
HXDLIN( 487)									Float k00_2034 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -6))) );
HXDLIN( 487)									k00_2031 = (k00_2034 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -6))) ));
HXDLIN( 487)									Float k01_2134 = ( (Float)(_hx_array_unsafe_get(u,(eOffset05 + -7))) );
HXDLIN( 487)									k01_2131 = (k01_2134 - ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -7))) ));
HXDLIN( 487)									{
HXLINE( 487)										int _g66 = (eOffset05 + -6);
HXDLIN( 487)										::Array< Float > _g156 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val248 = ( (Float)(_hx_array_unsafe_get(_g156,_g66)) );
HXDLIN( 487)											Float val249 = (val248 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -6))) ));
HXDLIN( 487)											_g156->__unsafe_set(_g66,val249);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										int _g67 = (eOffset05 + -7);
HXDLIN( 487)										::Array< Float > _g157 = u;
HXDLIN( 487)										{
HXLINE( 487)											Float val250 = ( (Float)(_hx_array_unsafe_get(_g157,_g67)) );
HXDLIN( 487)											Float val251 = (val250 + ( (Float)(_hx_array_unsafe_get(u,(eOffset24 + -7))) ));
HXDLIN( 487)											_g157->__unsafe_set(_g67,val251);
            										}
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val252 = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val253 = (val252 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -6),val253);
            									}
HXDLIN( 487)									{
HXLINE( 487)										Float val254 = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 487)										Float val255 = (val254 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + 1))) )));
HXDLIN( 487)										u->__unsafe_set((eOffset24 + -7),val255);
            									}
HXDLIN( 487)									eOffset05 = (eOffset05 - 8);
HXDLIN( 487)									eOffset24 = (eOffset24 - 8);
HXDLIN( 487)									aOffset6 = (aOffset6 + k1);
            								}
            								_hx_goto_43:;
            							}
            						}
            					}
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				int _g210 = ((ld1 - 3) >> 1);
HXDLIN( 487)				int _g310 = (ld1 - 6);
HXDLIN( 487)				while((_g210 < _g310)){
HXLINE( 487)					_g210 = (_g210 + 1);
HXDLIN( 487)					int l1 = (_g210 - 1);
HXDLIN( 487)					int k01 = (n >> (l1 + 2));
HXDLIN( 487)					int k11 = (1 << (l1 + 3));
HXDLIN( 487)					int k0_21 = (k01 >> 1);
HXDLIN( 487)					int rlim = (n >> (l1 + 6));
HXDLIN( 487)					int lim1 = (1 << (l1 + 1));
HXDLIN( 487)					int aOffset7 = 0;
HXDLIN( 487)					int i_off2 = (n2 - 1);
HXDLIN( 487)					int r = (rlim + 1);
HXDLIN( 487)					while(true){
HXLINE( 487)						r = (r - 1);
HXDLIN( 487)						if (!((r > 0))) {
HXLINE( 487)							goto _hx_goto_45;
            						}
HXDLIN( 487)						{
HXLINE( 487)							Float A0 = ( (Float)(_hx_array_unsafe_get(a,aOffset7)) );
HXDLIN( 487)							Float A1 = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + 1))) );
HXDLIN( 487)							Float A2 = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + k11))) );
HXDLIN( 487)							Float A3 = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + k11) + 1))) );
HXDLIN( 487)							Float A4 = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * 2)))) );
HXDLIN( 487)							Float A5 = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * 2)) + 1))) );
HXDLIN( 487)							Float A6 = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * 3)))) );
HXDLIN( 487)							Float A7 = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * 3)) + 1))) );
HXDLIN( 487)							int eeOffset02 = i_off2;
HXDLIN( 487)							int eeOffset22 = (i_off2 + -(k0_21));
HXDLIN( 487)							int i8 = (lim1 + 1);
HXDLIN( 487)							while(true){
HXLINE( 487)								i8 = (i8 - 1);
HXDLIN( 487)								if (!((i8 > 0))) {
HXLINE( 487)									goto _hx_goto_46;
            								}
HXDLIN( 487)								Float k00 = ( (Float)(_hx_array_unsafe_get(u,eeOffset02)) );
HXDLIN( 487)								Float k001 = (k00 - ( (Float)(_hx_array_unsafe_get(u,eeOffset22)) ));
HXDLIN( 487)								Float k111 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -1))) );
HXDLIN( 487)								Float k112 = (k111 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -1))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float val256 = ( (Float)(_hx_array_unsafe_get(u,eeOffset02)) );
HXDLIN( 487)									Float val257 = (val256 + ( (Float)(_hx_array_unsafe_get(u,eeOffset22)) ));
HXDLIN( 487)									u->__unsafe_set(eeOffset02,val257);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float val258 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -1))) );
HXDLIN( 487)									Float val259 = (val258 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -1))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -1),val259);
            								}
HXDLIN( 487)								u->__unsafe_set(eeOffset22,((k001 * A0) - (k112 * A1)));
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -1),((k112 * A0) + (k001 * A1)));
HXDLIN( 487)								Float k002 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -2))) );
HXDLIN( 487)								k001 = (k002 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -2))) ));
HXDLIN( 487)								Float k113 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -3))) );
HXDLIN( 487)								k112 = (k113 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -3))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float val260 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -2))) );
HXDLIN( 487)									Float val261 = (val260 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -2))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -2),val261);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float val262 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -3))) );
HXDLIN( 487)									Float val263 = (val262 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -3))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -3),val263);
            								}
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -2),((k001 * A2) - (k112 * A3)));
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -3),((k112 * A2) + (k001 * A3)));
HXDLIN( 487)								Float k003 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -4))) );
HXDLIN( 487)								k001 = (k003 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -4))) ));
HXDLIN( 487)								Float k114 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -5))) );
HXDLIN( 487)								k112 = (k114 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -5))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float val264 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -4))) );
HXDLIN( 487)									Float val265 = (val264 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -4))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -4),val265);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float val266 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -5))) );
HXDLIN( 487)									Float val267 = (val266 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -5))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -5),val267);
            								}
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -4),((k001 * A4) - (k112 * A5)));
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -5),((k112 * A4) + (k001 * A5)));
HXDLIN( 487)								Float k004 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -6))) );
HXDLIN( 487)								k001 = (k004 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -6))) ));
HXDLIN( 487)								Float k115 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -7))) );
HXDLIN( 487)								k112 = (k115 - ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -7))) ));
HXDLIN( 487)								{
HXLINE( 487)									Float val268 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -6))) );
HXDLIN( 487)									Float val269 = (val268 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -6))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -6),val269);
            								}
HXDLIN( 487)								{
HXLINE( 487)									Float val270 = ( (Float)(_hx_array_unsafe_get(u,(eeOffset02 + -7))) );
HXDLIN( 487)									Float val271 = (val270 + ( (Float)(_hx_array_unsafe_get(u,(eeOffset22 + -7))) ));
HXDLIN( 487)									u->__unsafe_set((eeOffset02 + -7),val271);
            								}
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -6),((k001 * A6) - (k112 * A7)));
HXDLIN( 487)								u->__unsafe_set((eeOffset22 + -7),((k112 * A6) + (k001 * A7)));
HXDLIN( 487)								eeOffset02 = (eeOffset02 - k01);
HXDLIN( 487)								eeOffset22 = (eeOffset22 - k01);
            							}
            							_hx_goto_46:;
            						}
HXDLIN( 487)						aOffset7 = (aOffset7 + (k11 * 4));
HXDLIN( 487)						i_off2 = (i_off2 - 8);
            					}
            					_hx_goto_45:;
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				int i_off3 = (n2 - 1);
HXDLIN( 487)				Float A21 = ( (Float)(_hx_array_unsafe_get(a,(n >> 3))) );
HXDLIN( 487)				int zOffset = i_off3;
HXDLIN( 487)				int baseOffset = (i_off3 - (16 * (n >> 5)));
HXDLIN( 487)				while((zOffset > baseOffset)){
HXLINE( 487)					Float t0 = ( (Float)(_hx_array_unsafe_get(u,zOffset)) );
HXDLIN( 487)					Float t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -8))) );
HXDLIN( 487)					u->__unsafe_set((zOffset + -8),(t0 - t1));
HXDLIN( 487)					u->__unsafe_set(zOffset,(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -1))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -9))) );
HXDLIN( 487)					u->__unsafe_set((zOffset + -9),(t0 - t1));
HXDLIN( 487)					u->__unsafe_set((zOffset + -1),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -2))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -10))) );
HXDLIN( 487)					Float k005 = (t0 - t1);
HXDLIN( 487)					u->__unsafe_set((zOffset + -2),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -3))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -11))) );
HXDLIN( 487)					Float k116 = (t0 - t1);
HXDLIN( 487)					u->__unsafe_set((zOffset + -3),(t0 + t1));
HXDLIN( 487)					u->__unsafe_set((zOffset + -10),((k005 + k116) * A21));
HXDLIN( 487)					u->__unsafe_set((zOffset + -11),((k116 - k005) * A21));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -4))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -12))) );
HXDLIN( 487)					k005 = (t1 - t0);
HXDLIN( 487)					u->__unsafe_set((zOffset + -4),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -5))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -13))) );
HXDLIN( 487)					k116 = (t0 - t1);
HXDLIN( 487)					u->__unsafe_set((zOffset + -5),(t0 + t1));
HXDLIN( 487)					u->__unsafe_set((zOffset + -12),k116);
HXDLIN( 487)					u->__unsafe_set((zOffset + -13),k005);
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -6))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -14))) );
HXDLIN( 487)					k005 = (t1 - t0);
HXDLIN( 487)					u->__unsafe_set((zOffset + -6),(t0 + t1));
HXDLIN( 487)					t0 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -7))) );
HXDLIN( 487)					t1 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -15))) );
HXDLIN( 487)					k116 = (t0 - t1);
HXDLIN( 487)					u->__unsafe_set((zOffset + -7),(t0 + t1));
HXDLIN( 487)					u->__unsafe_set((zOffset + -14),((k005 + k116) * A21));
HXDLIN( 487)					u->__unsafe_set((zOffset + -15),((k005 - k116) * A21));
HXDLIN( 487)					{
HXLINE( 487)						Float t01 = ( (Float)(_hx_array_unsafe_get(u,zOffset)) );
HXDLIN( 487)						Float t11 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -4))) );
HXDLIN( 487)						Float k006 = (t01 - t11);
HXDLIN( 487)						Float y0 = (t01 + t11);
HXDLIN( 487)						t01 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -2))) );
HXDLIN( 487)						t11 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -6))) );
HXDLIN( 487)						Float y2 = (t01 + t11);
HXDLIN( 487)						Float k22 = (t01 - t11);
HXDLIN( 487)						u->__unsafe_set(zOffset,(y0 + y2));
HXDLIN( 487)						u->__unsafe_set((zOffset + -2),(y0 - y2));
HXDLIN( 487)						Float k33 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -3))) );
HXDLIN( 487)						Float k331 = (k33 - ( (Float)(_hx_array_unsafe_get(u,(zOffset + -7))) ));
HXDLIN( 487)						u->__unsafe_set((zOffset + -4),(k006 + k331));
HXDLIN( 487)						u->__unsafe_set((zOffset + -6),(k006 - k331));
HXDLIN( 487)						t01 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -1))) );
HXDLIN( 487)						t11 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -5))) );
HXDLIN( 487)						Float k117 = (t01 - t11);
HXDLIN( 487)						Float y1 = (t01 + t11);
HXDLIN( 487)						Float y3 = ( (Float)(_hx_array_unsafe_get(u,(zOffset + -3))) );
HXDLIN( 487)						Float y31 = (y3 + ( (Float)(_hx_array_unsafe_get(u,(zOffset + -7))) ));
HXDLIN( 487)						u->__unsafe_set((zOffset + -1),(y1 + y31));
HXDLIN( 487)						u->__unsafe_set((zOffset + -3),(y1 - y31));
HXDLIN( 487)						u->__unsafe_set((zOffset + -5),(k117 - k22));
HXDLIN( 487)						u->__unsafe_set((zOffset + -7),(k117 + k22));
            					}
HXDLIN( 487)					{
HXLINE( 487)						int zOffset1 = (zOffset - 8);
HXDLIN( 487)						Float t02 = ( (Float)(_hx_array_unsafe_get(u,zOffset1)) );
HXDLIN( 487)						Float t12 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -4))) );
HXDLIN( 487)						Float k007 = (t02 - t12);
HXDLIN( 487)						Float y01 = (t02 + t12);
HXDLIN( 487)						t02 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -2))) );
HXDLIN( 487)						t12 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -6))) );
HXDLIN( 487)						Float y21 = (t02 + t12);
HXDLIN( 487)						Float k221 = (t02 - t12);
HXDLIN( 487)						u->__unsafe_set(zOffset1,(y01 + y21));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -2),(y01 - y21));
HXDLIN( 487)						Float k332 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -3))) );
HXDLIN( 487)						Float k333 = (k332 - ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -7))) ));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -4),(k007 + k333));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -6),(k007 - k333));
HXDLIN( 487)						t02 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -1))) );
HXDLIN( 487)						t12 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -5))) );
HXDLIN( 487)						Float k118 = (t02 - t12);
HXDLIN( 487)						Float y11 = (t02 + t12);
HXDLIN( 487)						Float y32 = ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -3))) );
HXDLIN( 487)						Float y33 = (y32 + ( (Float)(_hx_array_unsafe_get(u,(zOffset1 + -7))) ));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -1),(y11 + y33));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -3),(y11 - y33));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -5),(k118 - k221));
HXDLIN( 487)						u->__unsafe_set((zOffset1 + -7),(k118 + k221));
            					}
HXDLIN( 487)					zOffset = (zOffset - 16);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				int brOffset = 0;
HXDLIN( 487)				int dOffset01 = (n4 - 4);
HXDLIN( 487)				int dOffset11 = (n2 - 4);
HXDLIN( 487)				while((dOffset01 >= 0)){
HXLINE( 487)					int k4 = ( (int)(_hx_array_unsafe_get(bitReverse,brOffset)) );
HXDLIN( 487)					{
HXLINE( 487)						Float val272 = ( (Float)(_hx_array_unsafe_get(u,k4)) );
HXDLIN( 487)						v->__unsafe_set((dOffset11 + 3),val272);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val273 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 1))) );
HXDLIN( 487)						v->__unsafe_set((dOffset11 + 2),val273);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val274 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 2))) );
HXDLIN( 487)						v->__unsafe_set((dOffset01 + 3),val274);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val275 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 3))) );
HXDLIN( 487)						v->__unsafe_set((dOffset01 + 2),val275);
            					}
HXDLIN( 487)					k4 = ( (int)(_hx_array_unsafe_get(bitReverse,(brOffset + 1))) );
HXDLIN( 487)					{
HXLINE( 487)						Float val276 = ( (Float)(_hx_array_unsafe_get(u,k4)) );
HXDLIN( 487)						v->__unsafe_set((dOffset11 + 1),val276);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val277 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 1))) );
HXDLIN( 487)						v->__unsafe_set(dOffset11,val277);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val278 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 2))) );
HXDLIN( 487)						v->__unsafe_set((dOffset01 + 1),val278);
            					}
HXDLIN( 487)					{
HXLINE( 487)						Float val279 = ( (Float)(_hx_array_unsafe_get(u,(k4 + 3))) );
HXDLIN( 487)						v->__unsafe_set(dOffset01,val279);
            					}
HXDLIN( 487)					dOffset01 = (dOffset01 - 4);
HXDLIN( 487)					dOffset11 = (dOffset11 - 4);
HXDLIN( 487)					brOffset = (brOffset + 2);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				int cOffset = 0;
HXDLIN( 487)				int dOffset2 = 0;
HXDLIN( 487)				int eOffset3 = (n2 - 4);
HXDLIN( 487)				while((dOffset2 < eOffset3)){
HXLINE( 487)					Float a02 = ( (Float)(_hx_array_unsafe_get(v,dOffset2)) );
HXDLIN( 487)					Float a021 = (a02 - ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 2))) ));
HXDLIN( 487)					Float a11 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 1))) );
HXDLIN( 487)					Float a111 = (a11 + ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 3))) ));
HXDLIN( 487)					Float b0 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + 1))) ) * a021);
HXDLIN( 487)					Float b01 = (b0 + (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a111));
HXDLIN( 487)					Float b1 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + 1))) ) * a111);
HXDLIN( 487)					Float b11 = (b1 - (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a021));
HXDLIN( 487)					Float b2 = ( (Float)(_hx_array_unsafe_get(v,dOffset2)) );
HXDLIN( 487)					Float b21 = (b2 + ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 2))) ));
HXDLIN( 487)					Float b3 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 1))) );
HXDLIN( 487)					Float b31 = (b3 - ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 3))) ));
HXDLIN( 487)					v->__unsafe_set(dOffset2,(b21 + b01));
HXDLIN( 487)					v->__unsafe_set((dOffset2 + 1),(b31 + b11));
HXDLIN( 487)					v->__unsafe_set((eOffset3 + 2),(b21 - b01));
HXDLIN( 487)					v->__unsafe_set((eOffset3 + 3),(b11 - b31));
HXDLIN( 487)					Float a022 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 2))) );
HXDLIN( 487)					a021 = (a022 - ( (Float)(_hx_array_unsafe_get(v,eOffset3)) ));
HXDLIN( 487)					Float a112 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 3))) );
HXDLIN( 487)					a111 = (a112 + ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 1))) ));
HXDLIN( 487)					Float b02 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + 3))) ) * a021);
HXDLIN( 487)					b01 = (b02 + (( (Float)(_hx_array_unsafe_get(c,(cOffset + 2))) ) * a111));
HXDLIN( 487)					Float b12 = (( (Float)(_hx_array_unsafe_get(c,(cOffset + 3))) ) * a111);
HXDLIN( 487)					b11 = (b12 - (( (Float)(_hx_array_unsafe_get(c,(cOffset + 2))) ) * a021));
HXDLIN( 487)					Float b22 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 2))) );
HXDLIN( 487)					b21 = (b22 + ( (Float)(_hx_array_unsafe_get(v,eOffset3)) ));
HXDLIN( 487)					Float b32 = ( (Float)(_hx_array_unsafe_get(v,(dOffset2 + 3))) );
HXDLIN( 487)					b31 = (b32 - ( (Float)(_hx_array_unsafe_get(v,(eOffset3 + 1))) ));
HXDLIN( 487)					v->__unsafe_set((dOffset2 + 2),(b21 + b01));
HXDLIN( 487)					v->__unsafe_set((dOffset2 + 3),(b31 + b11));
HXDLIN( 487)					v->__unsafe_set(eOffset3,(b21 - b01));
HXDLIN( 487)					v->__unsafe_set((eOffset3 + 1),(b11 - b31));
HXDLIN( 487)					cOffset = (cOffset + 4);
HXDLIN( 487)					dOffset2 = (dOffset2 + 4);
HXDLIN( 487)					eOffset3 = (eOffset3 - 4);
            				}
            			}
HXDLIN( 487)			{
HXLINE( 487)				int bOffset = (n2 - 8);
HXDLIN( 487)				int eOffset4 = (n2 - 8);
HXDLIN( 487)				int dOffset02 = 0;
HXDLIN( 487)				int dOffset12 = (n2 - 4);
HXDLIN( 487)				int dOffset21 = n2;
HXDLIN( 487)				int dOffset3 = (n - 4);
HXDLIN( 487)				while((eOffset4 >= 0)){
HXLINE( 487)					Float p3 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 6))) );
HXDLIN( 487)					Float p31 = (p3 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 7))) ));
HXDLIN( 487)					Float p32 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 7))) );
HXDLIN( 487)					Float p33 = (p31 - (p32 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 6))) )));
HXDLIN( 487)					Float p2 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 6))) ));
HXDLIN( 487)					Float p21 = (p2 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 6))) ));
HXDLIN( 487)					Float p22 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 7))) );
HXDLIN( 487)					Float p23 = (p21 - (p22 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 7))) )));
HXDLIN( 487)					buffer->__unsafe_set(dOffset02,p33);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + 3),-(p33));
HXDLIN( 487)					buffer->__unsafe_set(dOffset21,p23);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + 3),p23);
HXDLIN( 487)					Float p1 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 4))) );
HXDLIN( 487)					Float p11 = (p1 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 5))) ));
HXDLIN( 487)					Float p12 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 5))) );
HXDLIN( 487)					Float p13 = (p11 - (p12 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 4))) )));
HXDLIN( 487)					Float p0 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 4))) ));
HXDLIN( 487)					Float p01 = (p0 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 4))) ));
HXDLIN( 487)					Float p02 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 5))) );
HXDLIN( 487)					Float p03 = (p01 - (p02 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 5))) )));
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + 1),p13);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + 2),-(p13));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + 1),p03);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + 2),p03);
HXDLIN( 487)					Float p34 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 2))) );
HXDLIN( 487)					Float p35 = (p34 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 3))) ));
HXDLIN( 487)					Float p36 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 3))) );
HXDLIN( 487)					p33 = (p35 - (p36 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 2))) )));
HXDLIN( 487)					Float p24 = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 2))) ));
HXDLIN( 487)					Float p25 = (p24 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 2))) ));
HXDLIN( 487)					Float p26 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 3))) );
HXDLIN( 487)					p23 = (p25 - (p26 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 3))) )));
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + 2),p33);
HXDLIN( 487)					buffer->__unsafe_set((dOffset12 + 1),-(p33));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + 2),p23);
HXDLIN( 487)					buffer->__unsafe_set((dOffset3 + 1),p23);
HXDLIN( 487)					Float p14 = ( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) );
HXDLIN( 487)					Float p15 = (p14 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 1))) ));
HXDLIN( 487)					Float p16 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 1))) );
HXDLIN( 487)					p13 = (p15 - (p16 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) )));
HXDLIN( 487)					Float p04 = -(( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) ));
HXDLIN( 487)					Float p05 = (p04 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) ));
HXDLIN( 487)					Float p06 = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + 1))) );
HXDLIN( 487)					p03 = (p05 - (p06 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + 1))) )));
HXDLIN( 487)					buffer->__unsafe_set((dOffset02 + 3),p13);
HXDLIN( 487)					buffer->__unsafe_set(dOffset12,-(p13));
HXDLIN( 487)					buffer->__unsafe_set((dOffset21 + 3),p03);
HXDLIN( 487)					buffer->__unsafe_set(dOffset3,p03);
HXDLIN( 487)					bOffset = (bOffset - 8);
HXDLIN( 487)					eOffset4 = (eOffset4 - 8);
HXDLIN( 487)					dOffset02 = (dOffset02 + 4);
HXDLIN( 487)					dOffset21 = (dOffset21 + 4);
HXDLIN( 487)					dOffset12 = (dOffset12 - 4);
HXDLIN( 487)					dOffset3 = (dOffset3 - 4);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,inverseMdct,(void))

 ::Dynamic VorbisDecoder_obj::decodePacket(){
            	HX_STACKFRAME(&_hx_pos_0c42774540b7c399_491_decodePacket)
HXLINE( 492)		 ::Dynamic result = this->decodeInitial();
HXLINE( 493)		if (hx::IsNull( result )) {
HXLINE( 494)			return null();
            		}
HXLINE( 496)		 ::Dynamic rest = this->decodePacketRest(result);
HXLINE( 497)		return rest;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodePacket,return )

 ::Dynamic VorbisDecoder_obj::decodeInitial(){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_501_decodeInitial)
HXLINE( 502)		this->channelBufferStart = (this->channelBufferEnd = 0);
HXLINE( 504)		while(true){
HXLINE( 505)			if (!(this->decodeState->maybeStartPacket())) {
HXLINE( 506)				return null();
            			}
HXLINE( 510)			if ((this->decodeState->readBits(1) != 0)) {
HXLINE( 511)				while(true){
HXLINE( 511)					 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this = this->decodeState;
HXDLIN( 511)					int x;
HXDLIN( 511)					bool x1;
HXDLIN( 511)					if ((_this->bytesInSeg == 0)) {
HXLINE( 511)						if (!(_this->lastSeg)) {
HXLINE( 511)							x1 = (_this->next() == 0);
            						}
            						else {
HXLINE( 511)							x1 = true;
            						}
            					}
            					else {
HXLINE( 511)						x1 = false;
            					}
HXDLIN( 511)					if (x1) {
HXLINE( 511)						x = -1;
            					}
            					else {
HXLINE( 511)						_this->bytesInSeg--;
HXDLIN( 511)						 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this1 = _this;
HXDLIN( 511)						_this1->inputPosition = (_this1->inputPosition + 1);
HXDLIN( 511)						x = _this->input->readByte();
            					}
HXDLIN( 511)					_this->validBits = 0;
HXDLIN( 511)					if (!((-1 != x))) {
HXLINE( 511)						goto _hx_goto_55;
            					}
            				}
            				_hx_goto_55:;
HXLINE( 512)				continue;
            			}
HXLINE( 514)			goto _hx_goto_54;
            		}
            		_hx_goto_54:;
HXLINE( 517)		int n = (this->header->modes->length - 1);
HXDLIN( 517)		::Array< int > log2_4 = ::Array_obj< int >::fromData( _hx_array_data_1815443d_57,16);
HXDLIN( 517)		int i;
HXDLIN( 517)		if ((n < 16384)) {
HXLINE( 517)			if ((n < 16)) {
HXLINE( 517)				i = log2_4->__get(n);
            			}
            			else {
HXLINE( 517)				if ((n < 512)) {
HXLINE( 517)					i = (5 + log2_4->__get((n >> 5)));
            				}
            				else {
HXLINE( 517)					i = (10 + log2_4->__get((n >> 10)));
            				}
            			}
            		}
            		else {
HXLINE( 517)			if ((n < 16777216)) {
HXLINE( 517)				if ((n < 524288)) {
HXLINE( 517)					i = (15 + log2_4->__get((n >> 15)));
            				}
            				else {
HXLINE( 517)					i = (20 + log2_4->__get((n >> 20)));
            				}
            			}
            			else {
HXLINE( 517)				if ((n < 536870912)) {
HXLINE( 517)					i = (25 + log2_4->__get((n >> 25)));
            				}
            				else {
HXLINE( 517)					if ((n < (int)-2147483648)) {
HXLINE( 517)						i = (30 + log2_4->__get((n >> 30)));
            					}
            					else {
HXLINE( 517)						i = 0;
            					}
            				}
            			}
            		}
HXDLIN( 517)		int i1 = this->decodeState->readBits(i);
HXLINE( 518)		bool _hx_tmp;
HXDLIN( 518)		if ((i1 != -1)) {
HXLINE( 518)			_hx_tmp = (i1 >= this->header->modes->length);
            		}
            		else {
HXLINE( 518)			_hx_tmp = true;
            		}
HXDLIN( 518)		if (_hx_tmp) {
HXLINE( 519)			HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),519,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("decodeInitial",f6,fc,28,f6))));
            		}
HXLINE( 522)		 ::kha::audio2::ogg::vorbis::data::Mode m = ( ( ::kha::audio2::ogg::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,i1)) );
HXLINE( 523)		int n1;
HXDLIN( 523)		int prev;
HXDLIN( 523)		int next;
HXLINE( 525)		if (m->blockflag) {
HXLINE( 526)			n1 = this->header->blocksize1;
HXLINE( 527)			prev = this->decodeState->readBits(1);
HXLINE( 528)			next = this->decodeState->readBits(1);
            		}
            		else {
HXLINE( 530)			next = 0;
HXDLIN( 530)			prev = next;
HXLINE( 531)			n1 = this->header->blocksize0;
            		}
HXLINE( 535)		int windowCenter = (n1 >> 1);
HXLINE( 539)		 ::Dynamic _hx_tmp1;
HXDLIN( 539)		bool _hx_tmp2;
HXDLIN( 539)		if (m->blockflag) {
HXLINE( 539)			_hx_tmp2 = (prev == 0);
            		}
            		else {
HXLINE( 539)			_hx_tmp2 = false;
            		}
HXDLIN( 539)		if (_hx_tmp2) {
HXLINE( 539)			_hx_tmp1 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),((n1 - this->header->blocksize0) >> 2))
            				->setFixed(1,HX_("end",db,03,4d,00),((n1 + this->header->blocksize0) >> 2)));
            		}
            		else {
HXLINE( 539)			_hx_tmp1 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),0)
            				->setFixed(1,HX_("end",db,03,4d,00),windowCenter));
            		}
HXLINE( 546)		 ::Dynamic _hx_tmp3;
HXDLIN( 546)		bool _hx_tmp4;
HXDLIN( 546)		if (m->blockflag) {
HXLINE( 546)			_hx_tmp4 = (next == 0);
            		}
            		else {
HXLINE( 546)			_hx_tmp4 = false;
            		}
HXDLIN( 546)		if (_hx_tmp4) {
HXLINE( 546)			_hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),(((n1 * 3) - this->header->blocksize0) >> 2))
            				->setFixed(1,HX_("end",db,03,4d,00),(((n1 * 3) + this->header->blocksize0) >> 2)));
            		}
            		else {
HXLINE( 546)			_hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),windowCenter)
            				->setFixed(1,HX_("end",db,03,4d,00),n1));
            		}
HXLINE( 537)		return  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("right",dc,0b,64,e9),_hx_tmp3)
            			->setFixed(1,HX_("left",07,08,b0,47),_hx_tmp1)
            			->setFixed(2,HX_("mode",63,d3,60,48),i1));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodeInitial,return )

 ::Dynamic VorbisDecoder_obj::decodePacketRest( ::Dynamic r){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_558_decodePacketRest)
HXLINE( 559)		int len = 0;
HXLINE( 560)		 ::kha::audio2::ogg::vorbis::data::Mode m = ( ( ::kha::audio2::ogg::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,( (int)(r->__Field(HX_("mode",63,d3,60,48),hx::paccDynamic)) ))) );
HXLINE( 562)		::Array< bool > this1 = ::Array_obj< bool >::__new(256);
HXDLIN( 562)		::Array< bool > zeroChannel = this1;
HXLINE( 563)		::Array< bool > this2 = ::Array_obj< bool >::__new(256);
HXDLIN( 563)		::Array< bool > reallyZeroChannel = this2;
HXLINE( 567)		int n;
HXDLIN( 567)		if (m->blockflag) {
HXLINE( 567)			n = this->header->blocksize1;
            		}
            		else {
HXLINE( 567)			n = this->header->blocksize0;
            		}
HXLINE( 568)		 ::kha::audio2::ogg::vorbis::data::Mapping map = ( ( ::kha::audio2::ogg::vorbis::data::Mapping)(_hx_array_unsafe_get(this->header->mapping,m->mapping)) );
HXLINE( 571)		int n2 = (n >> 1);
HXLINE( 573)		::Array< int > rangeList = ::Array_obj< int >::fromData( _hx_array_data_1815443d_74,4);
HXLINE( 574)		::Array< ::Dynamic> codebooks = this->header->codebooks;
HXLINE( 576)		{
HXLINE( 576)			int _g = 0;
HXDLIN( 576)			int _g1 = this->header->channel;
HXDLIN( 576)			while((_g < _g1)){
HXLINE( 576)				_g = (_g + 1);
HXDLIN( 576)				int i = (_g - 1);
HXLINE( 577)				int s = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i)) )->mux;
HXLINE( 578)				zeroChannel->__unsafe_set(i,false);
HXLINE( 579)				::Array< ::Dynamic> this3 = this->header->floorConfig;
HXDLIN( 579)				 ::kha::audio2::ogg::vorbis::data::Floor floor = ( ( ::kha::audio2::ogg::vorbis::data::Floor)(_hx_array_unsafe_get(this3,( (int)(_hx_array_unsafe_get(map->submapFloor,s)) ))) );
HXLINE( 580)				if ((floor->type == 0)) {
HXLINE( 581)					HX_STACK_DO_THROW( ::kha::audio2::ogg::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::kha::audio2::ogg::vorbis::data::ReaderErrorType_obj::INVALID_STREAM_dyn(),null(),hx::SourceInfo(HX_("kha/audio2/ogg/vorbis/VorbisDecoder.hx",a1,76,29,be),581,HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18),HX_("decodePacketRest",8a,29,db,8b))));
            				}
            				else {
HXLINE( 583)					 ::kha::audio2::ogg::vorbis::data::Floor1 g = floor->floor1;
HXLINE( 584)					if ((this->decodeState->readBits(1) != 0)) {
HXLINE( 585)						::Array< int > fy = ::Array_obj< int >::__new();
HXLINE( 586)						::Array< bool > this4 = ::Array_obj< bool >::__new(256);
HXDLIN( 586)						::Array< bool > step2Flag = this4;
HXLINE( 587)						int range = rangeList->__get((g->floor1Multiplier - 1));
HXLINE( 588)						int offset = 2;
HXLINE( 589)						fy = ( (::Array< int >)(_hx_array_unsafe_get(this->finalY,i)) );
HXLINE( 590)						::Array< int > log2_4 = ::Array_obj< int >::fromData( _hx_array_data_1815443d_75,16);
HXDLIN( 590)						int _hx_tmp;
HXDLIN( 590)						if ((range < 16384)) {
HXLINE( 590)							if ((range < 16)) {
HXLINE( 590)								_hx_tmp = log2_4->__get(range);
            							}
            							else {
HXLINE( 590)								if ((range < 512)) {
HXLINE( 590)									_hx_tmp = (5 + log2_4->__get((range >> 5)));
            								}
            								else {
HXLINE( 590)									_hx_tmp = (10 + log2_4->__get((range >> 10)));
            								}
            							}
            						}
            						else {
HXLINE( 590)							if ((range < 16777216)) {
HXLINE( 590)								if ((range < 524288)) {
HXLINE( 590)									_hx_tmp = (15 + log2_4->__get((range >> 15)));
            								}
            								else {
HXLINE( 590)									_hx_tmp = (20 + log2_4->__get((range >> 20)));
            								}
            							}
            							else {
HXLINE( 590)								if ((range < 536870912)) {
HXLINE( 590)									_hx_tmp = (25 + log2_4->__get((range >> 25)));
            								}
            								else {
HXLINE( 590)									if ((range < (int)-2147483648)) {
HXLINE( 590)										_hx_tmp = (30 + log2_4->__get((range >> 30)));
            									}
            									else {
HXLINE( 590)										_hx_tmp = 0;
            									}
            								}
            							}
            						}
HXDLIN( 590)						fy[0] = this->decodeState->readBits((_hx_tmp - 1));
HXLINE( 591)						::Array< int > log2_41 = ::Array_obj< int >::fromData( _hx_array_data_1815443d_76,16);
HXDLIN( 591)						int _hx_tmp1;
HXDLIN( 591)						if ((range < 16384)) {
HXLINE( 591)							if ((range < 16)) {
HXLINE( 591)								_hx_tmp1 = log2_41->__get(range);
            							}
            							else {
HXLINE( 591)								if ((range < 512)) {
HXLINE( 591)									_hx_tmp1 = (5 + log2_41->__get((range >> 5)));
            								}
            								else {
HXLINE( 591)									_hx_tmp1 = (10 + log2_41->__get((range >> 10)));
            								}
            							}
            						}
            						else {
HXLINE( 591)							if ((range < 16777216)) {
HXLINE( 591)								if ((range < 524288)) {
HXLINE( 591)									_hx_tmp1 = (15 + log2_41->__get((range >> 15)));
            								}
            								else {
HXLINE( 591)									_hx_tmp1 = (20 + log2_41->__get((range >> 20)));
            								}
            							}
            							else {
HXLINE( 591)								if ((range < 536870912)) {
HXLINE( 591)									_hx_tmp1 = (25 + log2_41->__get((range >> 25)));
            								}
            								else {
HXLINE( 591)									if ((range < (int)-2147483648)) {
HXLINE( 591)										_hx_tmp1 = (30 + log2_41->__get((range >> 30)));
            									}
            									else {
HXLINE( 591)										_hx_tmp1 = 0;
            									}
            								}
            							}
            						}
HXDLIN( 591)						fy[1] = this->decodeState->readBits((_hx_tmp1 - 1));
HXLINE( 592)						{
HXLINE( 592)							int _g2 = 0;
HXDLIN( 592)							int _g11 = g->partitions;
HXDLIN( 592)							while((_g2 < _g11)){
HXLINE( 592)								_g2 = (_g2 + 1);
HXDLIN( 592)								int j = (_g2 - 1);
HXLINE( 593)								int pclass = ( (int)(_hx_array_unsafe_get(g->partitionClassList,j)) );
HXLINE( 594)								int cdim = ( (int)(_hx_array_unsafe_get(g->classDimensions,pclass)) );
HXLINE( 595)								int cbits = ( (int)(_hx_array_unsafe_get(g->classSubclasses,pclass)) );
HXLINE( 596)								int csub = ((1 << cbits) - 1);
HXLINE( 597)								int cval = 0;
HXLINE( 598)								if ((cbits != 0)) {
HXLINE( 599)									 ::kha::audio2::ogg::vorbis::data::Codebook c = ( ( ::kha::audio2::ogg::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,( (int)(_hx_array_unsafe_get(g->classMasterbooks,pclass)) ))) );
HXLINE( 600)									 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this = this->decodeState;
HXDLIN( 600)									if ((_this->validBits < 10)) {
HXLINE( 600)										_this->prepHuffman();
            									}
HXDLIN( 600)									int i1 = ( (int)(_hx_array_unsafe_get(c->fastHuffman,(_this->acc & 1023))) );
HXDLIN( 600)									int val;
HXDLIN( 600)									if ((i1 >= 0)) {
HXLINE( 600)										int l = ( (int)(_hx_array_unsafe_get(c->codewordLengths,i1)) );
HXDLIN( 600)										_this->acc = hx::UShr(_this->acc,l);
HXDLIN( 600)										 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this1 = _this;
HXDLIN( 600)										_this1->validBits = (_this1->validBits - l);
HXDLIN( 600)										if ((_this->validBits < 0)) {
HXLINE( 600)											_this->validBits = 0;
HXDLIN( 600)											val = -1;
            										}
            										else {
HXLINE( 600)											val = i1;
            										}
            									}
            									else {
HXLINE( 600)										val = _this->decodeScalarRaw(c);
            									}
HXDLIN( 600)									if (c->sparse) {
HXLINE( 600)										val = ( (int)(_hx_array_unsafe_get(c->sortedValues,val)) );
            									}
HXDLIN( 600)									cval = val;
            								}
HXLINE( 603)								::Array< int > books = ( (::Array< int >)(_hx_array_unsafe_get(g->subclassBooks,pclass)) );
HXLINE( 604)								{
HXLINE( 604)									int _g3 = 0;
HXDLIN( 604)									int _g12 = cdim;
HXDLIN( 604)									while((_g3 < _g12)){
HXLINE( 604)										_g3 = (_g3 + 1);
HXDLIN( 604)										int k = (_g3 - 1);
HXLINE( 605)										int book = ( (int)(_hx_array_unsafe_get(books,(cval & csub))) );
HXLINE( 606)										cval = (cval >> cbits);
HXLINE( 607)										offset = (offset + 1);
HXDLIN( 607)										int _hx_tmp2;
HXDLIN( 607)										if ((book >= 0)) {
HXLINE( 608)											 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this2 = this->decodeState;
HXDLIN( 608)											 ::kha::audio2::ogg::vorbis::data::Codebook c1 = ( ( ::kha::audio2::ogg::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,book)) );
HXDLIN( 608)											if ((_this2->validBits < 10)) {
HXLINE( 608)												_this2->prepHuffman();
            											}
HXDLIN( 608)											int i2 = ( (int)(_hx_array_unsafe_get(c1->fastHuffman,(_this2->acc & 1023))) );
HXDLIN( 608)											int val1;
HXDLIN( 608)											if ((i2 >= 0)) {
HXLINE( 608)												int l1 = ( (int)(_hx_array_unsafe_get(c1->codewordLengths,i2)) );
HXDLIN( 608)												_this2->acc = hx::UShr(_this2->acc,l1);
HXDLIN( 608)												 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this3 = _this2;
HXDLIN( 608)												_this3->validBits = (_this3->validBits - l1);
HXDLIN( 608)												if ((_this2->validBits < 0)) {
HXLINE( 608)													_this2->validBits = 0;
HXDLIN( 608)													val1 = -1;
            												}
            												else {
HXLINE( 608)													val1 = i2;
            												}
            											}
            											else {
HXLINE( 608)												val1 = _this2->decodeScalarRaw(c1);
            											}
HXDLIN( 608)											if (c1->sparse) {
HXLINE( 608)												val1 = ( (int)(_hx_array_unsafe_get(c1->sortedValues,val1)) );
            											}
HXLINE( 607)											_hx_tmp2 = val1;
            										}
            										else {
HXLINE( 607)											_hx_tmp2 = 0;
            										}
HXDLIN( 607)										fy[(offset - 1)] = _hx_tmp2;
            									}
            								}
            							}
            						}
HXLINE( 615)						if ((this->decodeState->validBits == -1)) {
HXLINE( 616)							zeroChannel->__unsafe_set(i,true);
HXLINE( 617)							continue;
            						}
HXLINE( 620)						{
HXLINE( 620)							bool val2 = ( (bool)(step2Flag->__unsafe_set(1,true)) );
HXDLIN( 620)							step2Flag->__unsafe_set(0,val2);
            						}
HXLINE( 621)						::Array< ::Dynamic> naighbors = g->neighbors;
HXLINE( 622)						::Array< int > xlist = g->xlist;
HXLINE( 623)						{
HXLINE( 623)							int _g21 = 2;
HXDLIN( 623)							int _g31 = g->values;
HXDLIN( 623)							while((_g21 < _g31)){
HXLINE( 623)								_g21 = (_g21 + 1);
HXDLIN( 623)								int j1 = (_g21 - 1);
HXLINE( 624)								int low = ( (int)(_hx_array_unsafe_get(( (::Array< int >)(_hx_array_unsafe_get(naighbors,j1)) ),0)) );
HXLINE( 625)								int high = ( (int)(_hx_array_unsafe_get(( (::Array< int >)(_hx_array_unsafe_get(naighbors,j1)) ),1)) );
HXLINE( 626)								int x = ( (int)(_hx_array_unsafe_get(xlist,j1)) );
HXDLIN( 626)								int x0 = ( (int)(_hx_array_unsafe_get(xlist,low)) );
HXDLIN( 626)								int x1 = ( (int)(_hx_array_unsafe_get(xlist,high)) );
HXDLIN( 626)								int y0 = fy->__get(low);
HXDLIN( 626)								int dy = (fy->__get(high) - y0);
HXDLIN( 626)								int adx = (x1 - x0);
HXDLIN( 626)								Float err = (::Math_obj::abs(( (Float)(dy) )) * ( (Float)((x - x0)) ));
HXDLIN( 626)								int off = ::Std_obj::_hx_int((err / ( (Float)(adx) )));
HXDLIN( 626)								int lowroom;
HXDLIN( 626)								if ((dy < 0)) {
HXLINE( 626)									lowroom = (y0 - off);
            								}
            								else {
HXLINE( 626)									lowroom = (y0 + off);
            								}
HXLINE( 627)								int val3 = fy->__get(j1);
HXLINE( 628)								int highroom = (range - lowroom);
HXLINE( 629)								int room;
HXDLIN( 629)								if ((highroom < lowroom)) {
HXLINE( 629)									room = (highroom * 2);
            								}
            								else {
HXLINE( 629)									room = (lowroom * 2);
            								}
HXLINE( 634)								if ((val3 != 0)) {
HXLINE( 635)									{
HXLINE( 635)										bool val4 = ( (bool)(step2Flag->__unsafe_set(high,true)) );
HXDLIN( 635)										step2Flag->__unsafe_set(low,val4);
            									}
HXLINE( 636)									step2Flag->__unsafe_set(j1,true);
HXLINE( 637)									if ((val3 >= room)) {
HXLINE( 638)										if ((highroom > lowroom)) {
HXLINE( 639)											fy[j1] = ((val3 - lowroom) + lowroom);
            										}
            										else {
HXLINE( 641)											fy[j1] = (((lowroom - val3) + highroom) - 1);
            										}
            									}
            									else {
HXLINE( 644)										if (((val3 & 1) != 0)) {
HXLINE( 645)											fy[j1] = (lowroom - ((val3 + 1) >> 1));
            										}
            										else {
HXLINE( 647)											fy[j1] = (lowroom + (val3 >> 1));
            										}
            									}
            								}
            								else {
HXLINE( 651)									step2Flag->__unsafe_set(j1,false);
HXLINE( 652)									fy[j1] = lowroom;
            								}
            							}
            						}
HXLINE( 657)						{
HXLINE( 657)							int _g4 = 0;
HXDLIN( 657)							int _g5 = g->values;
HXDLIN( 657)							while((_g4 < _g5)){
HXLINE( 657)								_g4 = (_g4 + 1);
HXDLIN( 657)								int j2 = (_g4 - 1);
HXLINE( 658)								if (!(( (bool)(_hx_array_unsafe_get(step2Flag,j2)) ))) {
HXLINE( 659)									fy[j2] = -1;
            								}
            							}
            						}
            					}
            					else {
HXLINE( 664)						zeroChannel->__unsafe_set(i,true);
            					}
            				}
            			}
            		}
HXLINE( 678)		{
HXLINE( 678)			int _g22 = 0;
HXDLIN( 678)			int _g32 = this->header->channel;
HXDLIN( 678)			while((_g22 < _g32)){
HXLINE( 678)				_g22 = (_g22 + 1);
HXDLIN( 678)				int i3 = (_g22 - 1);
HXLINE( 679)				{
HXLINE( 679)					bool val5 = ( (bool)(_hx_array_unsafe_get(zeroChannel,i3)) );
HXDLIN( 679)					reallyZeroChannel->__unsafe_set(i3,val5);
            				}
            			}
            		}
HXLINE( 681)		{
HXLINE( 681)			int _g41 = 0;
HXDLIN( 681)			int _g51 = map->couplingSteps;
HXDLIN( 681)			while((_g41 < _g51)){
HXLINE( 681)				_g41 = (_g41 + 1);
HXDLIN( 681)				int i4 = (_g41 - 1);
HXLINE( 682)				bool _hx_tmp3;
HXDLIN( 682)				if (!(!(( (bool)(_hx_array_unsafe_get(zeroChannel,( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude)) )))) {
HXLINE( 682)					_hx_tmp3 = !(( (bool)(_hx_array_unsafe_get(zeroChannel,( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle)) ));
            				}
            				else {
HXLINE( 682)					_hx_tmp3 = true;
            				}
HXDLIN( 682)				if (_hx_tmp3) {
HXLINE( 683)					int index = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude;
HXDLIN( 683)					int index1 = ( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle;
HXDLIN( 683)					bool val6 = ( (bool)(zeroChannel->__unsafe_set(index1,false)) );
HXDLIN( 683)					zeroChannel->__unsafe_set(index,val6);
            				}
            			}
            		}
HXLINE( 687)		{
HXLINE( 687)			int _g6 = 0;
HXDLIN( 687)			int _g7 = map->submaps;
HXDLIN( 687)			while((_g6 < _g7)){
HXLINE( 687)				_g6 = (_g6 + 1);
HXDLIN( 687)				int i5 = (_g6 - 1);
HXLINE( 688)				::Array< ::Dynamic> this5 = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXDLIN( 688)				::Array< ::Dynamic> residueBuffers = this5;
HXLINE( 689)				::Array< bool > this6 = ::Array_obj< bool >::__new(256);
HXDLIN( 689)				::Array< bool > doNotDecode = this6;
HXLINE( 690)				int ch = 0;
HXLINE( 691)				{
HXLINE( 691)					int _g61 = 0;
HXDLIN( 691)					int _g71 = this->header->channel;
HXDLIN( 691)					while((_g61 < _g71)){
HXLINE( 691)						_g61 = (_g61 + 1);
HXDLIN( 691)						int j3 = (_g61 - 1);
HXLINE( 693)						if ((( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,j3)) )->mux == i5)) {
HXLINE( 694)							if (( (bool)(_hx_array_unsafe_get(zeroChannel,j3)) )) {
HXLINE( 695)								doNotDecode->__unsafe_set(ch,true);
HXLINE( 696)								{
HXLINE( 696)									::Array< Float > val7 = null();
HXDLIN( 696)									residueBuffers->__unsafe_set(ch,val7);
            								}
            							}
            							else {
HXLINE( 698)								doNotDecode->__unsafe_set(ch,false);
HXLINE( 699)								{
HXLINE( 699)									::Array< Float > val8 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,j3)) );
HXDLIN( 699)									residueBuffers->__unsafe_set(ch,val8);
            								}
            							}
HXLINE( 701)							ch = (ch + 1);
            						}
            					}
            				}
HXLINE( 705)				int r1 = ( (int)(_hx_array_unsafe_get(map->submapResidue,i5)) );
HXLINE( 706)				 ::kha::audio2::ogg::vorbis::data::Residue residue = ( ( ::kha::audio2::ogg::vorbis::data::Residue)(_hx_array_unsafe_get(this->header->residueConfig,r1)) );
HXLINE( 707)				residue->decode(this->decodeState,this->header,residueBuffers,ch,n2,doNotDecode,this->channelBuffers);
            			}
            		}
HXLINE( 713)		int i6 = map->couplingSteps;
HXLINE( 714)		int n21 = (n >> 1);
HXLINE( 715)		while(true){
HXLINE( 715)			i6 = (i6 - 1);
HXDLIN( 715)			if (!((i6 >= 0))) {
HXLINE( 715)				goto _hx_goto_67;
            			}
HXLINE( 716)			::Array< ::Dynamic> this7 = this->channelBuffers;
HXDLIN( 716)			::Array< Float > m1 = ( (::Array< Float >)(_hx_array_unsafe_get(this7,( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->magnitude)) );
HXLINE( 717)			::Array< ::Dynamic> this8 = this->channelBuffers;
HXDLIN( 717)			::Array< Float > a = ( (::Array< Float >)(_hx_array_unsafe_get(this8,( ( ::kha::audio2::ogg::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->angle)) );
HXLINE( 718)			{
HXLINE( 718)				int _g8 = 0;
HXDLIN( 718)				int _g9 = n21;
HXDLIN( 718)				while((_g8 < _g9)){
HXLINE( 718)					_g8 = (_g8 + 1);
HXDLIN( 718)					int j4 = (_g8 - 1);
HXLINE( 719)					Float a2;
HXDLIN( 719)					Float m2;
HXLINE( 720)					if ((( (Float)(_hx_array_unsafe_get(m1,j4)) ) > 0)) {
HXLINE( 721)						if ((( (Float)(_hx_array_unsafe_get(a,j4)) ) > 0)) {
HXLINE( 722)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 723)							Float a21 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 723)							a2 = (a21 - ( (Float)(_hx_array_unsafe_get(a,j4)) ));
            						}
            						else {
HXLINE( 725)							a2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 726)							Float m21 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 726)							m2 = (m21 + ( (Float)(_hx_array_unsafe_get(a,j4)) ));
            						}
            					}
            					else {
HXLINE( 729)						if ((( (Float)(_hx_array_unsafe_get(a,j4)) ) > 0)) {
HXLINE( 730)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 731)							Float a22 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 731)							a2 = (a22 + ( (Float)(_hx_array_unsafe_get(a,j4)) ));
            						}
            						else {
HXLINE( 733)							a2 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXLINE( 734)							Float m22 = ( (Float)(_hx_array_unsafe_get(m1,j4)) );
HXDLIN( 734)							m2 = (m22 - ( (Float)(_hx_array_unsafe_get(a,j4)) ));
            						}
            					}
HXLINE( 737)					m1->__unsafe_set(j4,m2);
HXLINE( 738)					a->__unsafe_set(j4,a2);
            				}
            			}
            		}
            		_hx_goto_67:;
HXLINE( 744)		{
HXLINE( 744)			int _g81 = 0;
HXDLIN( 744)			int _g91 = this->header->channel;
HXDLIN( 744)			while((_g81 < _g91)){
HXLINE( 744)				_g81 = (_g81 + 1);
HXDLIN( 744)				int i7 = (_g81 - 1);
HXLINE( 745)				if (( (bool)(_hx_array_unsafe_get(reallyZeroChannel,i7)) )) {
HXLINE( 746)					int _g82 = 0;
HXDLIN( 746)					int _g92 = n21;
HXDLIN( 746)					while((_g82 < _g92)){
HXLINE( 746)						_g82 = (_g82 + 1);
HXDLIN( 746)						int j5 = (_g82 - 1);
HXLINE( 747)						( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) )->__unsafe_set(j5,0);
            					}
            				}
            				else {
HXLINE( 750)					::Array< ::Dynamic> _hx_tmp4 = this->header->floorConfig;
HXDLIN( 750)					::Array< Float > _hx_tmp5 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) );
HXDLIN( 750)					map->doFloor(_hx_tmp4,i7,n,_hx_tmp5,( (::Array< int >)(_hx_array_unsafe_get(this->finalY,i7)) ),null());
            				}
            			}
            		}
HXLINE( 756)		{
HXLINE( 756)			int _g10 = 0;
HXDLIN( 756)			int _g111 = this->header->channel;
HXDLIN( 756)			while((_g10 < _g111)){
HXLINE( 756)				_g10 = (_g10 + 1);
HXDLIN( 756)				int i8 = (_g10 - 1);
HXLINE( 757)				::Array< Float > _hx_tmp6 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i8)) );
HXDLIN( 757)				this->inverseMdct(_hx_tmp6,n,m->blockflag);
            			}
            		}
HXLINE( 763)		{
HXLINE( 763)			 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this4 = this->decodeState;
HXDLIN( 763)			while(true){
HXLINE( 763)				bool _hx_tmp7;
HXDLIN( 763)				if ((_this4->bytesInSeg == 0)) {
HXLINE( 763)					if (!(_this4->lastSeg)) {
HXLINE( 763)						_hx_tmp7 = (_this4->next() != 0);
            					}
            					else {
HXLINE( 763)						_hx_tmp7 = false;
            					}
            				}
            				else {
HXLINE( 763)					_hx_tmp7 = true;
            				}
HXDLIN( 763)				if (!(_hx_tmp7)) {
HXLINE( 763)					goto _hx_goto_72;
            				}
HXDLIN( 763)				_this4->bytesInSeg--;
HXDLIN( 763)				{
HXLINE( 763)					 ::kha::audio2::ogg::vorbis::VorbisDecodeState _this5 = _this4;
HXDLIN( 763)					_this5->inputPosition = (_this5->inputPosition + 1);
HXDLIN( 763)					_this4->input->readByte();
            				}
            			}
            			_hx_goto_72:;
            		}
HXLINE( 765)		return this->decodeState->finishDecodePacket(this->previousLength,n,r);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,decodePacketRest,return )

 ::kha::audio2::ogg::vorbis::VorbisDecoder VorbisDecoder_obj::start( ::haxe::io::Input input){
            	HX_GC_STACKFRAME(&_hx_pos_0c42774540b7c399_72_start)
HXLINE(  73)		 ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState =  ::kha::audio2::ogg::vorbis::VorbisDecodeState_obj::__alloc( HX_CTX ,input);
HXLINE(  74)		 ::kha::audio2::ogg::vorbis::data::Header header = ::kha::audio2::ogg::vorbis::data::Header_obj::read(decodeState);
HXLINE(  75)		 ::kha::audio2::ogg::vorbis::VorbisDecoder decoder =  ::kha::audio2::ogg::vorbis::VorbisDecoder_obj::__alloc( HX_CTX ,header,decodeState);
HXLINE(  76)		decodeState->startFirstDecode();
HXLINE(  77)		decoder->pumpFirstFrame();
HXLINE(  79)		return decoder;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,start,return )


hx::ObjectPtr< VorbisDecoder_obj > VorbisDecoder_obj::__new( ::kha::audio2::ogg::vorbis::data::Header header, ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState) {
	hx::ObjectPtr< VorbisDecoder_obj > __this = new VorbisDecoder_obj();
	__this->__construct(header,decodeState);
	return __this;
}

hx::ObjectPtr< VorbisDecoder_obj > VorbisDecoder_obj::__alloc(hx::Ctx *_hx_ctx, ::kha::audio2::ogg::vorbis::data::Header header, ::kha::audio2::ogg::vorbis::VorbisDecodeState decodeState) {
	VorbisDecoder_obj *__this = (VorbisDecoder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(VorbisDecoder_obj), true, "kha.audio2.ogg.vorbis.VorbisDecoder"));
	*(void **)__this = VorbisDecoder_obj::_hx_vtable;
	__this->__construct(header,decodeState);
	return __this;
}

VorbisDecoder_obj::VorbisDecoder_obj()
{
}

void VorbisDecoder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VorbisDecoder);
	HX_MARK_MEMBER_NAME(previousWindow,"previousWindow");
	HX_MARK_MEMBER_NAME(previousLength,"previousLength");
	HX_MARK_MEMBER_NAME(finalY,"finalY");
	HX_MARK_MEMBER_NAME(a,"a");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(c,"c");
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_MARK_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_MARK_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_MARK_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_MARK_MEMBER_NAME(header,"header");
	HX_MARK_MEMBER_NAME(currentSample,"currentSample");
	HX_MARK_MEMBER_NAME(totalSample,"totalSample");
	HX_MARK_MEMBER_NAME(decodeState,"decodeState");
	HX_MARK_END_CLASS();
}

void VorbisDecoder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(previousWindow,"previousWindow");
	HX_VISIT_MEMBER_NAME(previousLength,"previousLength");
	HX_VISIT_MEMBER_NAME(finalY,"finalY");
	HX_VISIT_MEMBER_NAME(a,"a");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(c,"c");
	HX_VISIT_MEMBER_NAME(window,"window");
	HX_VISIT_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_VISIT_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_VISIT_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_VISIT_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_VISIT_MEMBER_NAME(header,"header");
	HX_VISIT_MEMBER_NAME(currentSample,"currentSample");
	HX_VISIT_MEMBER_NAME(totalSample,"totalSample");
	HX_VISIT_MEMBER_NAME(decodeState,"decodeState");
}

hx::Val VorbisDecoder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return hx::Val( a ); }
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		if (HX_FIELD_EQ(inName,"c") ) { return hx::Val( c ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn() ); }
		if (HX_FIELD_EQ(inName,"seek") ) { return hx::Val( seek_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { return hx::Val( finalY ); }
		if (HX_FIELD_EQ(inName,"window") ) { return hx::Val( window ); }
		if (HX_FIELD_EQ(inName,"header") ) { return hx::Val( header ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getWindow") ) { return hx::Val( getWindow_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { return hx::Val( totalSample ); }
		if (HX_FIELD_EQ(inName,"decodeState") ) { return hx::Val( decodeState ); }
		if (HX_FIELD_EQ(inName,"skipSamples") ) { return hx::Val( skipSamples_dyn() ); }
		if (HX_FIELD_EQ(inName,"finishFrame") ) { return hx::Val( finishFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"inverseMdct") ) { return hx::Val( inverseMdct_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"decodePacket") ) { return hx::Val( decodePacket_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { return hx::Val( currentSample ); }
		if (HX_FIELD_EQ(inName,"getFrameFloat") ) { return hx::Val( getFrameFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"initBlocksize") ) { return hx::Val( initBlocksize_dyn() ); }
		if (HX_FIELD_EQ(inName,"decodeInitial") ) { return hx::Val( decodeInitial_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { return hx::Val( previousWindow ); }
		if (HX_FIELD_EQ(inName,"previousLength") ) { return hx::Val( previousLength ); }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { return hx::Val( bitReverseData ); }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { return hx::Val( channelBuffers ); }
		if (HX_FIELD_EQ(inName,"ensurePosition") ) { return hx::Val( ensurePosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"pumpFirstFrame") ) { return hx::Val( pumpFirstFrame_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { return hx::Val( channelBufferEnd ); }
		if (HX_FIELD_EQ(inName,"decodePacketRest") ) { return hx::Val( decodePacketRest_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setupSampleNumber") ) { return hx::Val( setupSampleNumber_dyn() ); }
		if (HX_FIELD_EQ(inName,"seekFrameFromPage") ) { return hx::Val( seekFrameFromPage_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { return hx::Val( channelBufferStart ); }
	}
	return super::__Field(inName,inCallProp);
}

bool VorbisDecoder_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
	}
	return false;
}

hx::Val VorbisDecoder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { _hx_set_a(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { _hx_set_b(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"c") ) { _hx_set_c(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { _hx_set_finalY(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"window") ) { _hx_set_window(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"header") ) { _hx_set_header(HX_CTX_GET,inValue.Cast<  ::kha::audio2::ogg::vorbis::data::Header >()); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { _hx_set_totalSample(HX_CTX_GET,inValue.Cast<  ::Dynamic >()); return inValue; }
		if (HX_FIELD_EQ(inName,"decodeState") ) { _hx_set_decodeState(HX_CTX_GET,inValue.Cast<  ::kha::audio2::ogg::vorbis::VorbisDecodeState >()); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { currentSample=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { _hx_set_previousWindow(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"previousLength") ) { previousLength=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { _hx_set_bitReverseData(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { _hx_set_channelBuffers(HX_CTX_GET,inValue.Cast< ::Array< ::Dynamic> >()); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { channelBufferEnd=inValue.Cast< int >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { channelBufferStart=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VorbisDecoder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("previousWindow",87,47,23,41));
	outFields->push(HX_("previousLength",7d,48,9e,8d));
	outFields->push(HX_("finalY",23,28,79,86));
	outFields->push(HX_("a",61,00,00,00));
	outFields->push(HX_("b",62,00,00,00));
	outFields->push(HX_("c",63,00,00,00));
	outFields->push(HX_("window",f0,93,8c,52));
	outFields->push(HX_("bitReverseData",9f,9c,26,b2));
	outFields->push(HX_("channelBuffers",f0,b8,bc,61));
	outFields->push(HX_("channelBufferStart",3f,1f,c8,ba));
	outFields->push(HX_("channelBufferEnd",78,4d,ee,d4));
	outFields->push(HX_("header",8d,09,00,fd));
	outFields->push(HX_("currentSample",43,e1,a6,00));
	outFields->push(HX_("totalSample",0e,53,80,e3));
	outFields->push(HX_("decodeState",03,02,25,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo VorbisDecoder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,previousWindow),HX_("previousWindow",87,47,23,41)},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,previousLength),HX_("previousLength",7d,48,9e,8d)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,finalY),HX_("finalY",23,28,79,86)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,a),HX_("a",61,00,00,00)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,b),HX_("b",62,00,00,00)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,c),HX_("c",63,00,00,00)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,window),HX_("window",f0,93,8c,52)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,bitReverseData),HX_("bitReverseData",9f,9c,26,b2)},
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(VorbisDecoder_obj,channelBuffers),HX_("channelBuffers",f0,b8,bc,61)},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferStart),HX_("channelBufferStart",3f,1f,c8,ba)},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferEnd),HX_("channelBufferEnd",78,4d,ee,d4)},
	{hx::fsObject /*  ::kha::audio2::ogg::vorbis::data::Header */ ,(int)offsetof(VorbisDecoder_obj,header),HX_("header",8d,09,00,fd)},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,currentSample),HX_("currentSample",43,e1,a6,00)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(VorbisDecoder_obj,totalSample),HX_("totalSample",0e,53,80,e3)},
	{hx::fsObject /*  ::kha::audio2::ogg::vorbis::VorbisDecodeState */ ,(int)offsetof(VorbisDecoder_obj,decodeState),HX_("decodeState",03,02,25,4c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VorbisDecoder_obj_sStaticStorageInfo = 0;
#endif

static ::String VorbisDecoder_obj_sMemberFields[] = {
	HX_("previousWindow",87,47,23,41),
	HX_("previousLength",7d,48,9e,8d),
	HX_("finalY",23,28,79,86),
	HX_("a",61,00,00,00),
	HX_("b",62,00,00,00),
	HX_("c",63,00,00,00),
	HX_("window",f0,93,8c,52),
	HX_("bitReverseData",9f,9c,26,b2),
	HX_("channelBuffers",f0,b8,bc,61),
	HX_("channelBufferStart",3f,1f,c8,ba),
	HX_("channelBufferEnd",78,4d,ee,d4),
	HX_("header",8d,09,00,fd),
	HX_("currentSample",43,e1,a6,00),
	HX_("totalSample",0e,53,80,e3),
	HX_("decodeState",03,02,25,4c),
	HX_("read",56,4b,a7,4b),
	HX_("skipSamples",4a,34,3b,1f),
	HX_("setupSampleNumber",b0,18,f3,16),
	HX_("seek",78,85,50,4c),
	HX_("seekFrameFromPage",8e,11,2a,58),
	HX_("clone",5d,13,63,48),
	HX_("ensurePosition",87,40,d1,b4),
	HX_("getFrameFloat",65,56,2f,42),
	HX_("pumpFirstFrame",a5,34,b1,a7),
	HX_("finishFrame",da,9a,88,2d),
	HX_("getWindow",26,1d,e3,ce),
	HX_("initBlocksize",5e,03,09,e2),
	HX_("inverseMdct",98,89,aa,21),
	HX_("decodePacket",56,3f,d9,31),
	HX_("decodeInitial",f6,fc,28,f6),
	HX_("decodePacketRest",8a,29,db,8b),
	::String(null()) };

hx::Class VorbisDecoder_obj::__mClass;

static ::String VorbisDecoder_obj_sStaticFields[] = {
	HX_("start",62,74,0b,84),
	::String(null())
};

void VorbisDecoder_obj::__register()
{
	VorbisDecoder_obj _hx_dummy;
	VorbisDecoder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha.audio2.ogg.vorbis.VorbisDecoder",3d,44,15,18);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &VorbisDecoder_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VorbisDecoder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VorbisDecoder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VorbisDecoder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace audio2
} // end namespace ogg
} // end namespace vorbis
